{"ast":null,"code":"var _jsxFileName = \"X:\\\\cessini2\\\\src\\\\components\\\\Dashboard\\\\CreateCampaigns\\\\campaignForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport store from '../../../store/store';\nimport { storeCampaign } from '../../../actions';\nimport axios from 'axios';\nimport campStyle from '../../../css_modules/form.module.css';\nimport Back from '../../../assets/LeftArrow';\nimport Add from '../../../assets/Add';\n\nconst CampForm = ({\n  newCampaignData,\n  setNewCampaignData\n}) => {\n  const [emailCSV, setEmailCSV] = useState([]);\n  useEffect(() => {\n    setEmailCSV(store.getState().emailList);\n  });\n  const options = emailCSV ? emailCSV.map(list => /*#__PURE__*/React.createElement(\"option\", {\n    key: list.id,\n    value: list.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, list.name)) : null;\n  const {\n    push\n  } = useHistory(null);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topNavCam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashBodyMainCam  subWrapperCam\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${campStyle.camFormHolder}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formFields  Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leftFields Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"camName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, \"Campaign Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: newCampaignData.campName,\n    type: \"text\",\n    id: \"camName\",\n    name: \"camName\",\n    onChange: e => setNewCampaignData({ ...newCampaignData,\n      campName: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"SenderName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, \"Sender Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: newCampaignData.senderName,\n    type: \"text\",\n    id: \"SenderName\",\n    name: \"SenderName\",\n    onChange: e => setNewCampaignData({ ...newCampaignData,\n      senderName: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailSub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  }, \"Email Subject\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: newCampaignData.emailSub,\n    type: \"text\",\n    id: \"emailSub\",\n    name: \"camName\",\n    onChange: e => setNewCampaignData({ ...newCampaignData,\n      emailSub: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rightFields Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"SenderEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, \"Sender Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: newCampaignData.senderEmail,\n    type: \"text\",\n    id: \"SenderEmail\",\n    name: \"SenderEmail\",\n    onChange: e => setNewCampaignData({ ...newCampaignData,\n      senderEmail: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Attachment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, \"Email Attachment\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, newCampaignData.emailAttachment ? newCampaignData.emailAttachment.name : /*#__PURE__*/React.createElement(Add, {\n    height: \"80%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"emailList\",\n    onChange: e => setNewCampaignData({ ...newCampaignData,\n      emailAttachment: e.target.files[0]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subField Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailLists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, \"Email List\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"camName\",\n    name: \"camName\",\n    onChange: e => setNewCampaignData({ ...newCampaignData,\n      emailListCVS: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, options)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formButtons Fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"backButton\",\n    onClick: () => {\n      push(\"/dashboard\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Back, {\n    fill: \"#B1B1B1\",\n    width: \"50%\",\n    height: \"50%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createButton Fields formButtonsCam\",\n    onClick: () => {\n      push(\"/dashboard/newcamp/maileditor\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Next \")))));\n};\n\nexport default CampForm;","map":{"version":3,"sources":["X:/cessini2/src/components/Dashboard/CreateCampaigns/campaignForm.js"],"names":["React","useEffect","useState","useHistory","store","storeCampaign","axios","campStyle","Back","Add","CampForm","newCampaignData","setNewCampaignData","emailCSV","setEmailCSV","getState","emailList","options","map","list","id","name","push","camFormHolder","campName","e","target","value","senderName","emailSub","senderEmail","emailAttachment","files","emailListCVS"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport store from '../../../store/store'\r\nimport { storeCampaign } from '../../../actions'\r\nimport axios from 'axios'\r\nimport campStyle from '../../../css_modules/form.module.css'\r\nimport Back from '../../../assets/LeftArrow'\r\nimport Add from '../../../assets/Add'\r\n\r\nconst CampForm = ({ newCampaignData, setNewCampaignData }) => {\r\n    const [emailCSV, setEmailCSV] = useState([])\r\n\r\n    useEffect(() => {\r\n        setEmailCSV(store.getState().emailList)\r\n    })\r\n\r\n\r\n    const options = emailCSV ? emailCSV.map(list =>\r\n        <option key={list.id} value={list.id}>{list.name}</option>\r\n    ) : null;\r\n\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <>\r\n            <div className=\"topNavCam\">\r\n                {/* <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                    onClick={() => push(\"/dashboard\")}\r\n                >\r\n                    Back\r\n                </div> */}\r\n                {/* <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n                    <p>Save & Next</p>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className={`${campStyle.camFormHolder}`}>\r\n                    <form className=\"formFields  Fields\">\r\n                        <div className=\"leftFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"camName\">Campaign Name</label>\r\n                                <input value={newCampaignData.campName} type=\"text\" id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, campName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderName\">Sender Name</label>\r\n                                <input value={newCampaignData.senderName} type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, senderName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailSub\">Email Subject</label>\r\n                                <input value={newCampaignData.emailSub} type=\"text\" id=\"emailSub\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailSub: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rightFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n                                <input value={newCampaignData.senderEmail} type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, senderEmail: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Attachment\">\r\n                                <label htmlFor=\"emailList\">Email Attachment</label>\r\n                                <div>\r\n                                    {newCampaignData.emailAttachment ?\r\n                                        newCampaignData.emailAttachment.name :\r\n                                        <Add height=\"80%\" />}\r\n                                    <input type=\"file\" id=\"emailList\"\r\n                                        onChange={e => setNewCampaignData({ ...newCampaignData, emailAttachment: e.target.files[0] })}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailLists\">Email List</label>\r\n                                <select id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailListCVS: e.target.value })}\r\n                                >\r\n                                    {options}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtons Fields\">\r\n                        <div className=\"backButton\"\r\n                            onClick={() => {\r\n                                push(\"/dashboard\")\r\n                            }}\r\n                        >\r\n                            <Back fill={\"#B1B1B1\"} width={\"50%\"} height={\"50%\"}></Back>\r\n                        </div>\r\n                        <div className=\"createButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                push(\"/dashboard/newcamp/maileditor\")\r\n                            }\r\n                            }\r\n                        >\r\n                            Next {/* {update ? \"Update & Exit\" : \"Save & Exit\"} */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CampForm;"]},"metadata":{},"sourceType":"module"}