{"ast":null,"code":"import _regeneratorRuntime from\"X:\\\\cessini2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(watchUserSignIn),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(watchEmailListAdd),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(watchCampAdd),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(getEmailList),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(getCampaigns),_marked6=/*#__PURE__*/_regeneratorRuntime.mark(updateCampaigns);import{call,take,put,delay,fork}from\"redux-saga/effects\";import axios from'axios';import store from'../store/store';import{ActionTypes,storeAllEmailList,storeAllCampaigns}from'../actions';var fetchEmaillist=function fetchEmaillist(){return fetch(\"https://emailengine2020.herokuapp.com/newemail/\").then(function(re){return re.json();});};var fetchCampaings=function fetchCampaings(){return fetch(\"https://emailengine2020.herokuapp.com/newcampaign\").then(function(re){return re.json();});};var postEmaillist=function postEmaillist(data){return axios.post(\"https://emailengine2020.herokuapp.com/newemail/\",data).then(function(re){return re.data;});};var postCampaings=function postCampaings(data){return fetch(\"https://emailengine2020.herokuapp.com/newcampaign\",data).then(function(re){return re.json();});};export function watchUserSignIn(){var _yield$take,payload;return _regeneratorRuntime.wrap(function watchUserSignIn$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!true){_context.next=17;break;}_context.next=3;return take(ActionTypes.GET_ALL_EMAIL_LIST);case 3:_yield$take=_context.sent;payload=_yield$take.payload;_context.next=7;return fork(watchEmailListAdd);case 7:_context.next=9;return fork(watchCampAdd);case 9:_context.next=11;return fork(updateCampaigns);case 11:_context.next=13;return fork(getCampaigns,payload);case 13:_context.next=15;return call(getEmailList,payload);case 15:_context.next=0;break;case 17:case\"end\":return _context.stop();}}},_marked);}export function watchEmailListAdd(){var _yield$take2,payload,postData;return _regeneratorRuntime.wrap(function watchEmailListAdd$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!true){_context2.next=14;break;}console.log(\"watchEmailListAdd\");_context2.next=4;return take(ActionTypes.EMAIL_LIST_ADDED);case 4:_yield$take2=_context2.sent;payload=_yield$take2.payload;_context2.next=8;return call(postEmaillist,payload);case 8:postData=_context2.sent;console.log(postData);_context2.next=12;return call(getEmailList,store.getState().userData.id);case 12:_context2.next=0;break;case 14:case\"end\":return _context2.stop();}}},_marked2);}export function watchCampAdd(){return _regeneratorRuntime.wrap(function watchCampAdd$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!true){_context3.next=7;break;}_context3.next=3;return take(ActionTypes.CAMPAIGNS_ADDED);case 3:_context3.next=5;return call(getCampaigns,store.getState().userData.id);case 5:_context3.next=0;break;case 7:case\"end\":return _context3.stop();}}},_marked3);}export function getEmailList(payload){var allEmailList,filteredEmailList;return _regeneratorRuntime.wrap(function getEmailList$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return call(fetchEmaillist);case 2:allEmailList=_context4.sent;console.log(allEmailList);filteredEmailList=allEmailList.filter(function(emailList){return emailList.my_customer==payload;});console.log(filteredEmailList);_context4.next=8;return put(storeAllEmailList(filteredEmailList));case 8:case\"end\":return _context4.stop();}}},_marked4);}export function getCampaigns(payload){var allCampaigns,filteredCampaigns;return _regeneratorRuntime.wrap(function getCampaigns$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:delay(300);_context5.next=3;return call(fetchCampaings);case 3:allCampaigns=_context5.sent;filteredCampaigns=allCampaigns.filter(function(camp){return camp.my_customer==payload;});_context5.next=7;return put(storeAllCampaigns(filteredCampaigns));case 7:case\"end\":return _context5.stop();}}},_marked5);}export function updateCampaigns(){var _loop;return _regeneratorRuntime.wrap(function updateCampaigns$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_loop=/*#__PURE__*/_regeneratorRuntime.mark(function _loop(){var _yield$take3,payload,allCampaigns,filteredCampaigns;return _regeneratorRuntime.wrap(function _loop$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:console.log(\"updateCampaigns \");_context6.next=3;return take(ActionTypes.CAMPAIGN_UPDATED);case 3:_yield$take3=_context6.sent;payload=_yield$take3.payload;console.log(\"CAMPAIGN_UPDATED \");_context6.next=8;return call(fetchCampaings);case 8:allCampaigns=_context6.sent;filteredCampaigns=allCampaigns.filter(function(camp){return camp.my_customer===payload;});console.log(\"reached here\");_context6.next=13;return put(storeAllCampaigns(filteredCampaigns));case 13:case\"end\":return _context6.stop();}}},_loop);});case 1:if(!true){_context7.next=5;break;}return _context7.delegateYield(_loop(),\"t0\",3);case 3:_context7.next=1;break;case 5:case\"end\":return _context7.stop();}}},_marked6);}","map":{"version":3,"sources":["X:/cessini2/src/saga/index.js"],"names":["watchUserSignIn","watchEmailListAdd","watchCampAdd","getEmailList","getCampaigns","updateCampaigns","call","take","put","delay","fork","axios","store","ActionTypes","storeAllEmailList","storeAllCampaigns","fetchEmaillist","fetch","then","re","json","fetchCampaings","postEmaillist","data","post","postCampaings","GET_ALL_EMAIL_LIST","payload","console","log","EMAIL_LIST_ADDED","postData","getState","userData","id","CAMPAIGNS_ADDED","allEmailList","filteredEmailList","filter","emailList","my_customer","allCampaigns","filteredCampaigns","camp","CAMPAIGN_UPDATED"],"mappings":"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","sourcesContent":["import {\r\n    call, take, put, delay, fork\r\n} from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport store from '../store/store'\r\nimport { ActionTypes, storeAllEmailList, storeAllCampaigns } from '../actions'\r\n\r\n\r\n\r\nconst fetchEmaillist = () => {\r\n    return fetch(\"https://emailengine2020.herokuapp.com/newemail/\").then(re => re.json())\r\n}\r\n\r\nconst fetchCampaings = () => {\r\n    return fetch(\"https://emailengine2020.herokuapp.com/newcampaign\").then(re => re.json())\r\n}\r\n\r\nconst postEmaillist = (data) => {\r\n    return axios.post(\"https://emailengine2020.herokuapp.com/newemail/\", data).then(re => re.data)\r\n\r\n\r\n}\r\n\r\nconst postCampaings = (data) => {\r\n    return fetch(\"https://emailengine2020.herokuapp.com/newcampaign\", data).then(re => re.json())\r\n}\r\n\r\nexport function* watchUserSignIn() {\r\n    while (true) {\r\n        const { payload } = yield take(ActionTypes.GET_ALL_EMAIL_LIST)\r\n        yield fork(watchEmailListAdd)\r\n        yield fork(watchCampAdd)\r\n        yield fork(updateCampaigns)\r\n        yield fork(getCampaigns, payload)\r\n        yield call(getEmailList, payload)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* watchEmailListAdd() {\r\n    while (true) {\r\n        console.log(\"watchEmailListAdd\")\r\n        const { payload } = yield take(ActionTypes.EMAIL_LIST_ADDED)\r\n        const postData = yield call(postEmaillist, payload)\r\n        console.log(postData)\r\n        yield call(getEmailList, store.getState().userData.id)\r\n    }\r\n}\r\n\r\nexport function* watchCampAdd() {\r\n    while (true) {\r\n        yield take(ActionTypes.CAMPAIGNS_ADDED)\r\n        yield call(getCampaigns, store.getState().userData.id)\r\n    }\r\n}\r\n\r\nexport function* getEmailList(payload) {\r\n    const allEmailList = yield call(fetchEmaillist)\r\n    console.log(allEmailList)\r\n    const filteredEmailList = allEmailList.filter(emailList => emailList.my_customer == payload)\r\n    console.log(filteredEmailList)\r\n    yield put(storeAllEmailList(filteredEmailList))\r\n}\r\n\r\nexport function* getCampaigns(payload) {\r\n    delay(300)\r\n    const allCampaigns = yield call(fetchCampaings)\r\n    const filteredCampaigns = allCampaigns.filter(camp => camp.my_customer == payload)\r\n    yield put(storeAllCampaigns(filteredCampaigns))\r\n}\r\n\r\nexport function* updateCampaigns() {\r\n    while (true) {\r\n        console.log(\"updateCampaigns \")\r\n        const { payload } = yield take(ActionTypes.CAMPAIGN_UPDATED)\r\n        console.log(\"CAMPAIGN_UPDATED \")\r\n        const allCampaigns = yield call(fetchCampaings)\r\n        const filteredCampaigns = allCampaigns.filter(camp => camp.my_customer === payload)\r\n        console.log(\"reached here\")\r\n        yield put(storeAllCampaigns(filteredCampaigns))\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}