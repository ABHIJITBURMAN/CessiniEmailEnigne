{"ast":null,"code":"import _objectSpread from\"X:\\\\cessini2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"X:\\\\cessini2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import'./newcam.css';import{useFormik}from'formik';import{useHistory}from'react-router-dom';import{Route,Switch}from'react-router-dom';import EmailEditor from'react-email-editor';import axios from'axios';import store from'../../../store/store';import CampForm from'./campaignForm';import{addCampaign}from'../../../actions';import{useSpring,animated}from'react-spring';var NewCam=function NewCam(){var _useSpring=useSpring(function(){return{transform:\"scaleX(1)\",text:\"Save & Send\",backgroundColor:\"rgb(23, 38, 74)\"};}),_useSpring2=_slicedToArray(_useSpring,2),sendButtonStyle=_useSpring2[0],setSendButtonStyle=_useSpring2[1];var _useSpring3=useSpring(function(){return{transform:\"scaleX(1)\",text:\"Save & Exit\",backgroundColor:\"rgb(23, 38, 74)\"};}),_useSpring4=_slicedToArray(_useSpring3,2),saveNexitButtonStyle=_useSpring4[0],setSaveNexitButtonStyle=_useSpring4[1];var _useState=useState({senderName:\"\",//string\nsenderEmail:\"\",//string\ncampName:\"\",//string\nemailSub:\"\",//string\nemailListCVS:0,//number\nemailAttachment:null,//null\nemailBodyJSON:null,//JSONobject\nemailBodyHTML:null//HTMLobject \n}),_useState2=_slicedToArray(_useState,2),newCampaignData=_useState2[0],setNewCampaignData=_useState2[1];var _useHistory=useHistory(null),push=_useHistory.push;var emailEditorRef=useRef(null);return/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/dashboard/newcamp/maileditor\",render:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"topNavCam  subWrapperCam\"},/*#__PURE__*/React.createElement(\"div\",{className:\"createCamp   topButtonsCam subWrapperCam\",onClick:function onClick(){return push(\"/dashboard/newcamp\");}},\"Back\"),/*#__PURE__*/React.createElement(animated.div,{className:\"topButtonsCam subWrapperCam saveAndsend\",style:sendButtonStyle,onClick:function onClick(){setSendButtonStyle({transform:\"scaleX(1)\",text:\"Sending...\",backgroundColor:\"#ff9f1bff\"});emailEditorRef.current.editor.exportHtml(function(_ref){var design=_ref.design,html=_ref.html;setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{emailBodyJSON:design,emailBodyHTML:html}));setTimeout(function(){var dataForm=new FormData();var Jda=JSON.stringify(newCampaignData.emailBodyJSON);dataForm.append(\"name\",newCampaignData.campName);dataForm.append(\"sender_name\",newCampaignData.senderName);dataForm.append(\"sender_email\",newCampaignData.senderEmail);dataForm.append(\"email_subject\",newCampaignData.emailSub);dataForm.append(\"my_customer\",store.getState().userData.id);dataForm.append(\"camp_emails\",Number(newCampaignData.emailListCVS));dataForm.append(\"email_message\",\"will see\");dataForm.append(\"temp_json\",Jda);dataForm.append(\"ht\",html);dataForm.append(\"attachment\",newCampaignData.emailAttachment);//newCampaignData.emailAttachment)\naxios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\",dataForm).then(function(res){console.log(res.data,res.data.id);store.dispatch(addCampaign());setSendButtonStyle({transform:\"scaleX(1)\",text:\"Done!\",backgroundColor:\"#365194ff\"});setTimeout(function(){push('/dashboard');},200);axios.post(\"https://emailengine2020.herokuapp.com/campid/\".concat(res.data.id,\"/\"));}).catch(function(er){if(er.response){if(er.response.status===500){setSendButtonStyle({transform:\"scaleX(1)\",text:\"Wait Trying Again\",backgroundColor:\"#a42020ff\"});document.getElementsByClassName(\"saveAndsend\")[0].click();// axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\n}}});},0);});}},sendButtonStyle.text),/*#__PURE__*/React.createElement(animated.div,{className:\"topButtonsCam subWrapperCam saveAndExit\",style:saveNexitButtonStyle,onClick:function onClick(){setSaveNexitButtonStyle({transform:\"scaleX(1)\",text:\"Sending...\",backgroundColor:\"#ff9f1bff\"});emailEditorRef.current.editor.exportHtml(function(_ref2){var design=_ref2.design,html=_ref2.html;setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{emailBodyJSON:design,emailBodyHTML:html}));setTimeout(function(){var dataForm=new FormData();var Jda=JSON.stringify(newCampaignData.emailBodyJSON);dataForm.append(\"name\",newCampaignData.campName);dataForm.append(\"sender_name\",newCampaignData.senderName);dataForm.append(\"sender_email\",newCampaignData.senderEmail);dataForm.append(\"email_subject\",newCampaignData.emailSub);dataForm.append(\"my_customer\",store.getState().userData.id);dataForm.append(\"camp_emails\",Number(newCampaignData.emailListCVS));dataForm.append(\"email_message\",\"will see\");dataForm.append(\"temp_json\",Jda);dataForm.append(\"ht\",html);dataForm.append(\"attachment\",newCampaignData.emailAttachment);//newCampaignData.emailAttachment)\naxios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\",dataForm).then(function(res){console.log(res.data);store.dispatch(addCampaign());setSendButtonStyle({transform:\"scaleX(1)\",text:\"Done!\",backgroundColor:\"#365194ff\"});setTimeout(function(){push('/dashboard');},200);}).catch(function(er){if(er.response){if(er.response.status===500){alert(er.response.status);//document.getElementsByClassName(\"sendAndExit\")[0].click()\n// axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\n}}});},0);});}},saveNexitButtonStyle.text)),/*#__PURE__*/React.createElement(\"div\",{className:\"dashBodyMain  subWrapper\"},/*#__PURE__*/React.createElement(EmailEditor,{ref:emailEditorRef})));}}),/*#__PURE__*/React.createElement(Route,{path:\"/dashboard/newcamp\",render:function render(){return/*#__PURE__*/React.createElement(CampForm,{newCampaignData:newCampaignData,setNewCampaignData:setNewCampaignData});}}));};export default NewCam;","map":{"version":3,"sources":["X:/cessini2/src/components/Dashboard/CreateCampaigns/newCam.js"],"names":["React","useState","useRef","useFormik","useHistory","Route","Switch","EmailEditor","axios","store","CampForm","addCampaign","useSpring","animated","NewCam","transform","text","backgroundColor","sendButtonStyle","setSendButtonStyle","saveNexitButtonStyle","setSaveNexitButtonStyle","senderName","senderEmail","campName","emailSub","emailListCVS","emailAttachment","emailBodyJSON","emailBodyHTML","newCampaignData","setNewCampaignData","push","emailEditorRef","current","editor","exportHtml","design","html","setTimeout","dataForm","FormData","Jda","JSON","stringify","append","getState","userData","id","Number","post","then","res","console","log","data","dispatch","catch","er","response","status","document","getElementsByClassName","click","alert"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './newcam.css'\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport EmailEditor from 'react-email-editor'\r\nimport axios from 'axios'\r\nimport store from '../../../store/store'\r\nimport CampForm from './campaignForm'\r\nimport { addCampaign } from '../../../actions'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nconst NewCam = () => {\r\n    const [sendButtonStyle, setSendButtonStyle] = useSpring(() => ({ transform: \"scaleX(1)\", text: \"Save & Send\", backgroundColor: \"rgb(23, 38, 74)\" }))\r\n    const [saveNexitButtonStyle, setSaveNexitButtonStyle] = useSpring(() => ({ transform: \"scaleX(1)\", text: \"Save & Exit\", backgroundColor: \"rgb(23, 38, 74)\" }))\r\n    const [newCampaignData, setNewCampaignData] = useState({\r\n        senderName: \"\",//string\r\n        senderEmail: \"\",//string\r\n        campName: \"\",//string\r\n        emailSub: \"\",//string\r\n        emailListCVS: 0,//number\r\n        emailAttachment: null,//null\r\n        emailBodyJSON: null,//JSONobject\r\n        emailBodyHTML: null,//HTMLobject \r\n    })\r\n    const { push } = useHistory(null)\r\n    const emailEditorRef = useRef(null);\r\n\r\n    return (\r\n        <Switch>\r\n\r\n            <Route path=\"/dashboard/newcamp/maileditor\" render={() =>\r\n                <>\r\n                    <div className=\"topNavCam  subWrapperCam\">\r\n                        <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                            onClick={() => push(\"/dashboard/newcamp\")}\r\n                        >\r\n                            Back\r\n                        </div>\r\n                        <animated.div className=\"topButtonsCam subWrapperCam saveAndsend\"\r\n                            style={sendButtonStyle}\r\n                            onClick={() => {\r\n                                setSendButtonStyle({ transform: \"scaleX(1)\", text: \"Sending...\", backgroundColor: \"#ff9f1bff\" });\r\n                                emailEditorRef.current.editor.exportHtml(({ design, html }) => {\r\n                                    setNewCampaignData({ ...newCampaignData, emailBodyJSON: design, emailBodyHTML: html })\r\n                                    setTimeout(() => {\r\n                                        let dataForm = new FormData\r\n                                        let Jda = JSON.stringify(newCampaignData.emailBodyJSON)\r\n                                        dataForm.append(\"name\", newCampaignData.campName)\r\n                                        dataForm.append(\"sender_name\", newCampaignData.senderName)\r\n                                        dataForm.append(\"sender_email\", newCampaignData.senderEmail)\r\n                                        dataForm.append(\"email_subject\", newCampaignData.emailSub)\r\n                                        dataForm.append(\"my_customer\", store.getState().userData.id)\r\n                                        dataForm.append(\"camp_emails\", Number(newCampaignData.emailListCVS))\r\n                                        dataForm.append(\"email_message\", \"will see\")\r\n                                        dataForm.append(\"temp_json\", Jda)\r\n                                        dataForm.append(\"ht\", html)\r\n                                        dataForm.append(\"attachment\", newCampaignData.emailAttachment)//newCampaignData.emailAttachment)\r\n                                        axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\",\r\n                                            dataForm\r\n                                        ).then(res => {\r\n                                            console.log(res.data, res.data.id)\r\n                                            store.dispatch(addCampaign())\r\n                                            setSendButtonStyle({ transform: \"scaleX(1)\", text: \"Done!\", backgroundColor: \"#365194ff\" });\r\n                                            setTimeout(() => { push('/dashboard') }, 200)\r\n                                            axios.post(`https://emailengine2020.herokuapp.com/campid/${res.data.id}/`)\r\n                                        })\r\n                                            .catch(er => {\r\n                                                if (er.response) {\r\n                                                    if (er.response.status === 500) {\r\n                                                        setSendButtonStyle({ transform: \"scaleX(1)\", text: \"Wait Trying Again\", backgroundColor: \"#a42020ff\" });\r\n                                                        document.getElementsByClassName(\"saveAndsend\")[0].click()\r\n                                                        // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            )\r\n\r\n                                    }, 0)\r\n\r\n                                })\r\n                            }}\r\n\r\n\r\n                        >\r\n                            {sendButtonStyle.text}\r\n                        </animated.div>\r\n                        <animated.div className=\"topButtonsCam subWrapperCam saveAndExit\"\r\n                            style={saveNexitButtonStyle}\r\n                            onClick={() => {\r\n                                setSaveNexitButtonStyle({ transform: \"scaleX(1)\", text: \"Sending...\", backgroundColor: \"#ff9f1bff\" });\r\n                                emailEditorRef.current.editor.exportHtml(({ design, html }) => {\r\n                                    setNewCampaignData({ ...newCampaignData, emailBodyJSON: design, emailBodyHTML: html })\r\n                                    setTimeout(() => {\r\n                                        let dataForm = new FormData\r\n                                        let Jda = JSON.stringify(newCampaignData.emailBodyJSON)\r\n                                        dataForm.append(\"name\", newCampaignData.campName)\r\n                                        dataForm.append(\"sender_name\", newCampaignData.senderName)\r\n                                        dataForm.append(\"sender_email\", newCampaignData.senderEmail)\r\n                                        dataForm.append(\"email_subject\", newCampaignData.emailSub)\r\n                                        dataForm.append(\"my_customer\", store.getState().userData.id)\r\n                                        dataForm.append(\"camp_emails\", Number(newCampaignData.emailListCVS))\r\n                                        dataForm.append(\"email_message\", \"will see\")\r\n                                        dataForm.append(\"temp_json\", Jda)\r\n                                        dataForm.append(\"ht\", html)\r\n                                        dataForm.append(\"attachment\", newCampaignData.emailAttachment)//newCampaignData.emailAttachment)\r\n                                        axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\",\r\n                                            dataForm\r\n                                        ).then(res => {\r\n                                            console.log(res.data)\r\n                                            store.dispatch(addCampaign())\r\n                                            setSendButtonStyle({ transform: \"scaleX(1)\", text: \"Done!\", backgroundColor: \"#365194ff\" });\r\n                                            setTimeout(() => { push('/dashboard') }, 200)\r\n                                        })\r\n                                            .catch(er => {\r\n                                                if (er.response) {\r\n                                                    if (er.response.status === 500) {\r\n                                                        alert(er.response.status)\r\n                                                        //document.getElementsByClassName(\"sendAndExit\")[0].click()\r\n                                                        // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            )\r\n\r\n                                    }, 0)\r\n\r\n                                })\r\n                            }\r\n                            }\r\n\r\n                        >\r\n                            {saveNexitButtonStyle.text}\r\n                        </animated.div>\r\n\r\n                    </div>\r\n                    <div className=\"dashBodyMain  subWrapper\">\r\n                        <EmailEditor ref={emailEditorRef}></EmailEditor>\r\n                    </div>\r\n                </>\r\n            }>\r\n            </Route>\r\n            <Route path=\"/dashboard/newcamp\" render={() =>\r\n                <CampForm newCampaignData={newCampaignData}\r\n                    setNewCampaignData={setNewCampaignData}\r\n                ></CampForm>}>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default NewCam;"]},"metadata":{},"sourceType":"module"}