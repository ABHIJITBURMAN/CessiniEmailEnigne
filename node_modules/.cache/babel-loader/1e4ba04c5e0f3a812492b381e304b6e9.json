{"ast":null,"code":"import _objectSpread from\"X:\\\\cessini2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"X:\\\\cessini2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useRef}from'react';import{useHistory}from'react-router-dom';import store from'../../../store/store';import{storeCampaign,updateCampaign}from'../../../actions';import{useSpring,animated}from'react-spring';import axios from'axios';var LoadedCampForm=function LoadedCampForm(_ref){var newCampaignData=_ref.newCampaignData,setNewCampaignData=_ref.setNewCampaignData,loadTheTemplate=_ref.loadTheTemplate,loaded=_ref.loaded,setLoaded=_ref.setLoaded;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),emailCSV=_useState2[0],setEmailCSV=_useState2[1];var _useSpring=useSpring(function(){return{text:\"Update & Exit\",backgroundColor:\"#365194ff\"};}),_useSpring2=_slicedToArray(_useSpring,2),upNexitButtonStyle=_useSpring2[0],setUpNexitButtonStyle=_useSpring2[1];var _useSpring3=useSpring(function(){return{text:\"Update & Send\",backgroundColor:\"#365194ff\"};}),_useSpring4=_slicedToArray(_useSpring3,2),upNsendButtonStyle=_useSpring4[0],setUpNsendButtonStyle=_useSpring4[1];useEffect(function(){var loadedCamp=store.getState().loadedCampaign?store.getState().loadedCampaign.campId:null;if(loadedCamp){if(!loaded){console.log(\"getting into if\");var first=store.getState().campaigns.filter(function(camp){return camp.id===loadedCamp;});setNewCampaignData(first[0]);setLoaded(true);}}setEmailCSV(store.getState().emailList);},[]);var options=emailCSV?emailCSV.map(function(list){return/*#__PURE__*/React.createElement(\"option\",{key:list.id,value:list.id},list.name);}):null;var camNameRef=useRef(null);var SenderNameRef=useRef(null);var emailSubRef=useRef(null);var SenderEmailRef=useRef(null);console.log(newCampaignData.campName);var _useHistory=useHistory(null),push=_useHistory.push;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"topNavCam  subWrapperCam\"},/*#__PURE__*/React.createElement(\"div\",{className:\"createCamp   topButtonsCam subWrapperCam\",onClick:function onClick(){return push(\"/dashboard\");}},\"Back\")),/*#__PURE__*/React.createElement(\"div\",{className:\"dashBodyMainCam  subWrapperCam\"},/*#__PURE__*/React.createElement(\"div\",{className:\"camFormHolder\"},/*#__PURE__*/React.createElement(\"form\",{className:\"formFields  Fields\"},/*#__PURE__*/React.createElement(\"div\",{className:\"leftFields Fields\"},/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"camName\"},\"Campaign Name\"),/*#__PURE__*/React.createElement(\"input\",{defaultValue:newCampaignData.name,ref:camNameRef,type:\"text\",id:\"camName\",name:\"camName\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{name:e.target.value}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"SenderName\"},\"Sender Name\"),/*#__PURE__*/React.createElement(\"input\",{defaultValue:newCampaignData.sender_name,ref:SenderNameRef,type:\"text\",id:\"SenderName\",name:\"SenderName\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{sender_name:e.target.value}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailSub\"},\"Email Subject\"),/*#__PURE__*/React.createElement(\"input\",{defaultValue:newCampaignData.email_subject,ref:emailSubRef,type:\"text\",id:\"emailSub\",name:\"camName\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{email_subject:e.target.value}));}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"rightFields Fields\"},/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"SenderEmail\"},\"Sender Email\"),/*#__PURE__*/React.createElement(\"input\",{defaultValue:newCampaignData.sender_email,ref:SenderEmailRef,type:\"text\",id:\"SenderEmail\",name:\"SenderEmail\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{sender_email:e.target.value}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subFieldLong Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailList\"},\"Email Attachment\"),/*#__PURE__*/React.createElement(\"input\",{type:\"file\",id:\"emailList\",onChange:function onChange(e){return setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{attachment:e.target.files[0]}));}})),/*#__PURE__*/React.createElement(\"div\",{className:\"subField Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailLists\"},\"Email List\"),console.log(newCampaignData.camp_emails),/*#__PURE__*/React.createElement(\"select\",{id:\"emailLists\",name:\"emailLists\",value:newCampaignData.camp_emails,onChange:function onChange(e){console.log(\"hey hey\",newCampaignData.camp_emails);setNewCampaignData(_objectSpread(_objectSpread({},newCampaignData),{},{camp_emails:e.target.value}));}},options)),/*#__PURE__*/React.createElement(\"div\",{className:\"subFieldLong Fields\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"emailBody\"},\"Email Body\"),/*#__PURE__*/React.createElement(\"div\",{id:\"emailBody\",className:\"desBody Fields formButtonsCam\",onClick:function onClick(){push(\"/dashboard/loadedcamp/maileditor\");setTimeout(function(){loadTheTemplate(newCampaignData.temp_json);},500);}},\"Deisgn Body\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"formButtons Fields\"},/*#__PURE__*/React.createElement(animated.div,{className:\"sendButton Fields formButtonsCam\",style:upNsendButtonStyle,onClick:function onClick(){//Updating\nsetUpNsendButtonStyle({transform:\"scaleX(1)\",text:\"Updating...\",backgroundColor:\"#389685ff\"});setTimeout(function(){//console.log(newCampaignData.ht)\nvar dataForm=new FormData();var Jda=JSON.stringify(newCampaignData.temp_json);dataForm.append(\"name\",newCampaignData.name);dataForm.append(\"sender_name\",newCampaignData.sender_name);dataForm.append(\"sender_email\",newCampaignData.sender_email);dataForm.append(\"email_subject\",newCampaignData.email_subject);dataForm.append(\"my_customer\",store.getState().userData.id);dataForm.append(\"camp_emails\",newCampaignData.camp_emails);dataForm.append(\"email_message\",\"will see\");dataForm.append(\"temp_json\",Jda);dataForm.append(\"ht\",newCampaignData.ht);if(typeof!newCampaignData.attachment==='string'){dataForm.append(\"attachment\",newCampaignData.attachment);}axios.put(\"https://emailengine2020.herokuapp.com/camprud/\".concat(store.getState().loadedCampaign.campId,\"/\"),dataForm).then(function(res){console.log(res);console.log(\"reached res\");store.dispatch(updateCampaign(store.getState().userData.id));setUpNsendButtonStyle({text:\"Sending...\",backgroundColor:\"#389685ff\"});axios.post(\"https://emailengine2020.herokuapp.com/campid/\".concat(store.getState().loadedCampaign.campId,\"/\")).then(function(res){setTimeout(function(){setUpNsendButtonStyle({text:\"Sent!\",backgroundColor:\"#656565ff\"});},1000);setTimeout(function(){push('/dashboard');},1300);});}).catch(function(er){console.log(er);console.log(\"reached er\");if(er.response){console.log(er.response.data);// if (er.response.status === 500) {\n//     document.getElementsByClassName(\"addEmailList topButtonsCam subWrapperCam\")[0].click()\n//     // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\n// }\n}});},0);//only send\n// setUpNsendButtonStyle({ text: \"Sending...\", backgroundColor: \"#389685ff\" })\n// axios.post(`https://emailengine2020.herokuapp.com/campid/${newCampaignData.id}/`).then(res => {\n//     setTimeout(() => { setUpNsendButtonStyle({ text: \"Sent!\", backgroundColor: \"#656565ff\" }) }, 1000)\n//     setTimeout(() => { push('/dashboard') }, 1300)\n// })\n}},upNsendButtonStyle.text),/*#__PURE__*/React.createElement(animated.div,{className:\"createButton Fields formButtonsCam\",style:upNexitButtonStyle,onClick:function onClick(){setUpNexitButtonStyle({transform:\"scaleX(1)\",text:\"Updating...\",backgroundColor:\"#389685ff\"});setTimeout(function(){//console.log(newCampaignData.ht)\nvar dataForm=new FormData();var Jda=JSON.stringify(newCampaignData.temp_json);dataForm.append(\"name\",newCampaignData.name);dataForm.append(\"sender_name\",newCampaignData.sender_name);dataForm.append(\"sender_email\",newCampaignData.sender_email);dataForm.append(\"email_subject\",newCampaignData.email_subject);dataForm.append(\"my_customer\",store.getState().userData.id);dataForm.append(\"camp_emails\",newCampaignData.camp_emails);dataForm.append(\"email_message\",\"will see\");dataForm.append(\"temp_json\",Jda);dataForm.append(\"ht\",newCampaignData.ht);if(typeof!newCampaignData.attachment==='string'){dataForm.append(\"attachment\",newCampaignData.attachment);}axios.put(\"https://emailengine2020.herokuapp.com/camprud/\".concat(store.getState().loadedCampaign.campId,\"/\"),dataForm).then(function(res){console.log(res);console.log(\"reached res\");store.dispatch(updateCampaign(store.getState().userData.id));setTimeout(function(){setUpNexitButtonStyle({text:\"Done!\",backgroundColor:\"#365194ff\"});},1000);setTimeout(function(){push('/dashboard');},1300);}).catch(function(er){console.log(er);console.log(\"reached er\");if(er.response){//console.log(er.response.data)\n// if (er.response.status === 500) {\n//     document.getElementsByClassName(\"addEmailList topButtonsCam subWrapperCam\")[0].click()\n//     // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\n// }\n}});},0);}},upNexitButtonStyle.text)))));};export default LoadedCampForm;","map":{"version":3,"sources":["X:/cessini2/src/components/Dashboard/LoadedCampaigns/loadedCampForm.js"],"names":["React","useEffect","useState","useRef","useHistory","store","storeCampaign","updateCampaign","useSpring","animated","axios","LoadedCampForm","newCampaignData","setNewCampaignData","loadTheTemplate","loaded","setLoaded","emailCSV","setEmailCSV","text","backgroundColor","upNexitButtonStyle","setUpNexitButtonStyle","upNsendButtonStyle","setUpNsendButtonStyle","loadedCamp","getState","loadedCampaign","campId","console","log","first","campaigns","filter","camp","id","emailList","options","map","list","name","camNameRef","SenderNameRef","emailSubRef","SenderEmailRef","campName","push","e","target","value","sender_name","email_subject","sender_email","attachment","files","camp_emails","setTimeout","temp_json","transform","dataForm","FormData","Jda","JSON","stringify","append","userData","ht","put","then","res","dispatch","post","catch","er","response","data"],"mappings":"+QAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,sBAAlB,CACA,OAASC,aAAT,CAAwBC,cAAxB,KAA8C,kBAA9C,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,cAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAiF,IAA9EC,CAAAA,eAA8E,MAA9EA,eAA8E,CAA7DC,kBAA6D,MAA7DA,kBAA6D,CAAzCC,eAAyC,MAAzCA,eAAyC,CAAxBC,MAAwB,MAAxBA,MAAwB,CAAhBC,SAAgB,MAAhBA,SAAgB,eACpEd,QAAQ,CAAC,EAAD,CAD4D,wCAC7Fe,QAD6F,eACnFC,WADmF,8BAGhDV,SAAS,CAAC,iBAAO,CAAEW,IAAI,CAAE,eAAR,CAAyBC,eAAe,CAAE,WAA1C,CAAP,EAAD,CAHuC,0CAG7FC,kBAH6F,gBAGzEC,qBAHyE,gCAIhDd,SAAS,CAAC,iBAAO,CAAEW,IAAI,CAAE,eAAR,CAAyBC,eAAe,CAAE,WAA1C,CAAP,EAAD,CAJuC,2CAI7FG,kBAJ6F,gBAIzEC,qBAJyE,gBAMpGvB,SAAS,CAAC,UAAM,CACZ,GAAMwB,CAAAA,UAAU,CAAGpB,KAAK,CAACqB,QAAN,GAAiBC,cAAjB,CAAkCtB,KAAK,CAACqB,QAAN,GAAiBC,cAAjB,CAAgCC,MAAlE,CAA2E,IAA9F,CACA,GAAIH,UAAJ,CAAgB,CACZ,GAAI,CAACV,MAAL,CAAa,CACTc,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACA,GAAMC,CAAAA,KAAK,CAAG1B,KAAK,CAACqB,QAAN,GAAiBM,SAAjB,CAA2BC,MAA3B,CAAkC,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYV,UAAhB,EAAtC,CAAd,CACAZ,kBAAkB,CAACkB,KAAK,CAAC,CAAD,CAAN,CAAlB,CACAf,SAAS,CAAC,IAAD,CAAT,CACH,CACJ,CACDE,WAAW,CAACb,KAAK,CAACqB,QAAN,GAAiBU,SAAlB,CAAX,CACH,CAXQ,CAWN,EAXM,CAAT,CAaA,GAAMC,CAAAA,OAAO,CAAGpB,QAAQ,CAAGA,QAAQ,CAACqB,GAAT,CAAa,SAAAC,IAAI,qBACxC,8BAAQ,GAAG,CAAEA,IAAI,CAACJ,EAAlB,CAAsB,KAAK,CAAEI,IAAI,CAACJ,EAAlC,EAAuCI,IAAI,CAACC,IAA5C,CADwC,EAAjB,CAAH,CAEpB,IAFJ,CAKA,GAAMC,CAAAA,UAAU,CAAGtC,MAAM,CAAC,IAAD,CAAzB,CACA,GAAMuC,CAAAA,aAAa,CAAGvC,MAAM,CAAC,IAAD,CAA5B,CACA,GAAMwC,CAAAA,WAAW,CAAGxC,MAAM,CAAC,IAAD,CAA1B,CACA,GAAMyC,CAAAA,cAAc,CAAGzC,MAAM,CAAC,IAAD,CAA7B,CAEA0B,OAAO,CAACC,GAAR,CAAYlB,eAAe,CAACiC,QAA5B,EA7BoG,gBAgCnFzC,UAAU,CAAC,IAAD,CAhCyE,CAgC5F0C,IAhC4F,aAgC5FA,IAhC4F,CAiCpG,mBACI,qDACI,2BAAK,SAAS,CAAC,0BAAf,eACI,2BAAK,SAAS,CAAC,0CAAf,CACI,OAAO,CAAE,yBAAMA,CAAAA,IAAI,CAAC,YAAD,CAAV,EADb,SADJ,CADJ,cAYI,2BAAK,SAAS,CAAC,gCAAf,eACI,2BAAK,SAAS,CAAC,eAAf,eACI,4BAAM,SAAS,CAAC,oBAAhB,eACI,2BAAK,SAAS,CAAC,mBAAf,eACI,2BAAK,SAAS,CAAC,iBAAf,eACI,6BAAO,OAAO,CAAC,SAAf,kBADJ,cAEI,6BAAO,YAAY,CAAElC,eAAe,CAAC4B,IAArC,CAA2C,GAAG,CAAEC,UAAhD,CAA4D,IAAI,CAAC,MAAjE,CAAwE,EAAE,CAAC,SAA3E,CAAqF,IAAI,CAAC,SAA1F,CACI,QAAQ,CAAE,kBAAAM,CAAC,QAAIlC,CAAAA,kBAAkB,gCAAMD,eAAN,MAAuB4B,IAAI,CAAEO,CAAC,CAACC,MAAF,CAASC,KAAtC,GAAtB,EADf,EAFJ,CADJ,cAOI,2BAAK,SAAS,CAAC,iBAAf,eACI,6BAAO,OAAO,CAAC,YAAf,gBADJ,cAEI,6BAAO,YAAY,CAAErC,eAAe,CAACsC,WAArC,CAAkD,GAAG,CAAER,aAAvD,CAAsE,IAAI,CAAC,MAA3E,CAAkF,EAAE,CAAC,YAArF,CAAkG,IAAI,CAAC,YAAvG,CACI,QAAQ,CAAE,kBAAAK,CAAC,QAAIlC,CAAAA,kBAAkB,gCAAMD,eAAN,MAAuBsC,WAAW,CAAEH,CAAC,CAACC,MAAF,CAASC,KAA7C,GAAtB,EADf,EAFJ,CAPJ,cAaI,2BAAK,SAAS,CAAC,iBAAf,eACI,6BAAO,OAAO,CAAC,UAAf,kBADJ,cAEI,6BAAO,YAAY,CAAErC,eAAe,CAACuC,aAArC,CAAoD,GAAG,CAAER,WAAzD,CAAsE,IAAI,CAAC,MAA3E,CAAkF,EAAE,CAAC,UAArF,CAAgG,IAAI,CAAC,SAArG,CACI,QAAQ,CAAE,kBAAAI,CAAC,QAAIlC,CAAAA,kBAAkB,gCAAMD,eAAN,MAAuBuC,aAAa,CAAEJ,CAAC,CAACC,MAAF,CAASC,KAA/C,GAAtB,EADf,EAFJ,CAbJ,CADJ,cAqBI,2BAAK,SAAS,CAAC,oBAAf,eACI,2BAAK,SAAS,CAAC,iBAAf,eACI,6BAAO,OAAO,CAAC,aAAf,iBADJ,cAEI,6BAAO,YAAY,CAAErC,eAAe,CAACwC,YAArC,CAAmD,GAAG,CAAER,cAAxD,CAAwE,IAAI,CAAC,MAA7E,CAAoF,EAAE,CAAC,aAAvF,CAAqG,IAAI,CAAC,aAA1G,CACI,QAAQ,CAAE,kBAAAG,CAAC,QAAIlC,CAAAA,kBAAkB,gCAAMD,eAAN,MAAuBwC,YAAY,CAAEL,CAAC,CAACC,MAAF,CAASC,KAA9C,GAAtB,EADf,EAFJ,CADJ,cAOI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,WAAf,qBADJ,cAGI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,WAAtB,CACI,QAAQ,CAAE,kBAAAF,CAAC,QAAIlC,CAAAA,kBAAkB,gCAAMD,eAAN,MAAuByC,UAAU,CAAEN,CAAC,CAACC,MAAF,CAASM,KAAT,CAAe,CAAf,CAAnC,GAAtB,EADf,EAHJ,CAPJ,cAcI,2BAAK,SAAS,CAAC,iBAAf,eACI,6BAAO,OAAO,CAAC,YAAf,eADJ,CAEKzB,OAAO,CAACC,GAAR,CAAYlB,eAAe,CAAC2C,WAA5B,CAFL,cAGI,8BAAQ,EAAE,CAAC,YAAX,CAAwB,IAAI,CAAC,YAA7B,CAA0C,KAAK,CAAE3C,eAAe,CAAC2C,WAAjE,CACI,QAAQ,CAAE,kBAAAR,CAAC,CAAI,CACXlB,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBlB,eAAe,CAAC2C,WAAvC,EACA1C,kBAAkB,gCAAMD,eAAN,MAAuB2C,WAAW,CAAER,CAAC,CAACC,MAAF,CAASC,KAA7C,GAAlB,CACH,CAJL,EAOKZ,OAPL,CAHJ,CAdJ,cA2BI,2BAAK,SAAS,CAAC,qBAAf,eACI,6BAAO,OAAO,CAAC,WAAf,eADJ,cAEI,2BAAK,EAAE,CAAC,WAAR,CAAoB,SAAS,CAAC,+BAA9B,CACI,OAAO,CAAE,kBAAM,CAEXS,IAAI,CAAC,kCAAD,CAAJ,CACAU,UAAU,CAAC,UAAM,CACb1C,eAAe,CAACF,eAAe,CAAC6C,SAAjB,CAAf,CACH,CAFS,CAEP,GAFO,CAAV,CAGH,CAPL,gBAFJ,CA3BJ,CArBJ,CADJ,cAiEI,2BAAK,SAAS,CAAC,oBAAf,eACI,oBAAC,QAAD,CAAU,GAAV,EAAc,SAAS,CAAC,kCAAxB,CACI,KAAK,CAAElC,kBADX,CAEI,OAAO,CAAE,kBAAM,CACX;AACAC,qBAAqB,CAAC,CAAEkC,SAAS,CAAE,WAAb,CAA0BvC,IAAI,CAAE,aAAhC,CAA+CC,eAAe,CAAE,WAAhE,CAAD,CAArB,CACAoC,UAAU,CAAC,UAAM,CACb;AACA,GAAIG,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAf,CACA,GAAIC,CAAAA,GAAG,CAAGC,IAAI,CAACC,SAAL,CAAenD,eAAe,CAAC6C,SAA/B,CAAV,CACAE,QAAQ,CAACK,MAAT,CAAgB,MAAhB,CAAwBpD,eAAe,CAAC4B,IAAxC,EACAmB,QAAQ,CAACK,MAAT,CAAgB,aAAhB,CAA+BpD,eAAe,CAACsC,WAA/C,EACAS,QAAQ,CAACK,MAAT,CAAgB,cAAhB,CAAgCpD,eAAe,CAACwC,YAAhD,EACAO,QAAQ,CAACK,MAAT,CAAgB,eAAhB,CAAiCpD,eAAe,CAACuC,aAAjD,EACAQ,QAAQ,CAACK,MAAT,CAAgB,aAAhB,CAA+B3D,KAAK,CAACqB,QAAN,GAAiBuC,QAAjB,CAA0B9B,EAAzD,EACAwB,QAAQ,CAACK,MAAT,CAAgB,aAAhB,CAA+BpD,eAAe,CAAC2C,WAA/C,EACAI,QAAQ,CAACK,MAAT,CAAgB,eAAhB,CAAiC,UAAjC,EACAL,QAAQ,CAACK,MAAT,CAAgB,WAAhB,CAA6BH,GAA7B,EACAF,QAAQ,CAACK,MAAT,CAAgB,IAAhB,CAAsBpD,eAAe,CAACsD,EAAtC,EACA,GAAI,MAAQ,CAACtD,eAAe,CAACyC,UAAzB,GAAyC,QAA7C,CAAuD,CACnDM,QAAQ,CAACK,MAAT,CAAgB,YAAhB,CAA8BpD,eAAe,CAACyC,UAA9C,EACH,CACD3C,KAAK,CAACyD,GAAN,yDAA2D9D,KAAK,CAACqB,QAAN,GAAiBC,cAAjB,CAAgCC,MAA3F,MACI+B,QADJ,EAEES,IAFF,CAEO,SAAAC,GAAG,CAAI,CACVxC,OAAO,CAACC,GAAR,CAAYuC,GAAZ,EACAxC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAEAzB,KAAK,CAACiE,QAAN,CAAe/D,cAAc,CAACF,KAAK,CAACqB,QAAN,GAAiBuC,QAAjB,CAA0B9B,EAA3B,CAA7B,EAEAX,qBAAqB,CAAC,CAAEL,IAAI,CAAE,YAAR,CAAsBC,eAAe,CAAE,WAAvC,CAAD,CAArB,CACAV,KAAK,CAAC6D,IAAN,wDAA2DlE,KAAK,CAACqB,QAAN,GAAiBC,cAAjB,CAAgCC,MAA3F,OAAsGwC,IAAtG,CAA2G,SAAAC,GAAG,CAAI,CAC9Gb,UAAU,CAAC,UAAM,CAAEhC,qBAAqB,CAAC,CAAEL,IAAI,CAAE,OAAR,CAAiBC,eAAe,CAAE,WAAlC,CAAD,CAArB,CAAwE,CAAjF,CAAmF,IAAnF,CAAV,CACAoC,UAAU,CAAC,UAAM,CAAEV,IAAI,CAAC,YAAD,CAAJ,CAAoB,CAA7B,CAA+B,IAA/B,CAAV,CACH,CAHD,EAIH,CAbD,EAcK0B,KAdL,CAcW,SAAAC,EAAE,CAAI,CACT5C,OAAO,CAACC,GAAR,CAAY2C,EAAZ,EACA5C,OAAO,CAACC,GAAR,CAAY,YAAZ,EACA,GAAI2C,EAAE,CAACC,QAAP,CAAiB,CACb7C,OAAO,CAACC,GAAR,CAAY2C,EAAE,CAACC,QAAH,CAAYC,IAAxB,EACA;AACA;AACA;AACA;AACH,CACJ,CAxBL,EA2BH,CA3CS,CA2CP,CA3CO,CAAV,CA4CA;AACA;AACA;AACA;AACA;AACA;AACH,CAvDL,EAyDKpD,kBAAkB,CAACJ,IAzDxB,CADJ,cA4DI,oBAAC,QAAD,CAAU,GAAV,EAAc,SAAS,CAAC,oCAAxB,CACI,KAAK,CAAEE,kBADX,CAEI,OAAO,CAAE,kBAAM,CACXC,qBAAqB,CAAC,CAAEoC,SAAS,CAAE,WAAb,CAA0BvC,IAAI,CAAE,aAAhC,CAA+CC,eAAe,CAAE,WAAhE,CAAD,CAArB,CACAoC,UAAU,CAAC,UAAM,CACb;AACA,GAAIG,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAf,CACA,GAAIC,CAAAA,GAAG,CAAGC,IAAI,CAACC,SAAL,CAAenD,eAAe,CAAC6C,SAA/B,CAAV,CACAE,QAAQ,CAACK,MAAT,CAAgB,MAAhB,CAAwBpD,eAAe,CAAC4B,IAAxC,EACAmB,QAAQ,CAACK,MAAT,CAAgB,aAAhB,CAA+BpD,eAAe,CAACsC,WAA/C,EACAS,QAAQ,CAACK,MAAT,CAAgB,cAAhB,CAAgCpD,eAAe,CAACwC,YAAhD,EACAO,QAAQ,CAACK,MAAT,CAAgB,eAAhB,CAAiCpD,eAAe,CAACuC,aAAjD,EACAQ,QAAQ,CAACK,MAAT,CAAgB,aAAhB,CAA+B3D,KAAK,CAACqB,QAAN,GAAiBuC,QAAjB,CAA0B9B,EAAzD,EACAwB,QAAQ,CAACK,MAAT,CAAgB,aAAhB,CAA+BpD,eAAe,CAAC2C,WAA/C,EACAI,QAAQ,CAACK,MAAT,CAAgB,eAAhB,CAAiC,UAAjC,EACAL,QAAQ,CAACK,MAAT,CAAgB,WAAhB,CAA6BH,GAA7B,EACAF,QAAQ,CAACK,MAAT,CAAgB,IAAhB,CAAsBpD,eAAe,CAACsD,EAAtC,EACA,GAAI,MAAQ,CAACtD,eAAe,CAACyC,UAAzB,GAAyC,QAA7C,CAAuD,CACnDM,QAAQ,CAACK,MAAT,CAAgB,YAAhB,CAA8BpD,eAAe,CAACyC,UAA9C,EACH,CACD3C,KAAK,CAACyD,GAAN,yDAA2D9D,KAAK,CAACqB,QAAN,GAAiBC,cAAjB,CAAgCC,MAA3F,MACI+B,QADJ,EAEES,IAFF,CAEO,SAAAC,GAAG,CAAI,CACVxC,OAAO,CAACC,GAAR,CAAYuC,GAAZ,EACAxC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAEAzB,KAAK,CAACiE,QAAN,CAAe/D,cAAc,CAACF,KAAK,CAACqB,QAAN,GAAiBuC,QAAjB,CAA0B9B,EAA3B,CAA7B,EAEAqB,UAAU,CAAC,UAAM,CACblC,qBAAqB,CAAC,CAAEH,IAAI,CAAE,OAAR,CAAiBC,eAAe,CAAE,WAAlC,CAAD,CAArB,CAEH,CAHS,CAGP,IAHO,CAAV,CAIAoC,UAAU,CAAC,UAAM,CAAEV,IAAI,CAAC,YAAD,CAAJ,CAAoB,CAA7B,CAA+B,IAA/B,CAAV,CACH,CAbD,EAcK0B,KAdL,CAcW,SAAAC,EAAE,CAAI,CACT5C,OAAO,CAACC,GAAR,CAAY2C,EAAZ,EACA5C,OAAO,CAACC,GAAR,CAAY,YAAZ,EACA,GAAI2C,EAAE,CAACC,QAAP,CAAiB,CACb;AACA;AACA;AACA;AACA;AACH,CACJ,CAxBL,EA2BH,CA3CS,CA2CP,CA3CO,CAAV,CA4CH,CAhDL,EAkDKrD,kBAAkB,CAACF,IAlDxB,CA5DJ,CAjEJ,CADJ,CAZJ,CADJ,CAoMH,CArOD,CAuOA,cAAeR,CAAAA,cAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport store from '../../../store/store'\r\nimport { storeCampaign, updateCampaign } from '../../../actions'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport axios from 'axios'\r\n\r\nconst LoadedCampForm = ({ newCampaignData, setNewCampaignData, loadTheTemplate, loaded, setLoaded }) => {\r\n    const [emailCSV, setEmailCSV] = useState([])\r\n\r\n    const [upNexitButtonStyle, setUpNexitButtonStyle] = useSpring(() => ({ text: \"Update & Exit\", backgroundColor: \"#365194ff\" }))\r\n    const [upNsendButtonStyle, setUpNsendButtonStyle] = useSpring(() => ({ text: \"Update & Send\", backgroundColor: \"#365194ff\" }))\r\n\r\n    useEffect(() => {\r\n        const loadedCamp = store.getState().loadedCampaign ? store.getState().loadedCampaign.campId : null\r\n        if (loadedCamp) {\r\n            if (!loaded) {\r\n                console.log(\"getting into if\")\r\n                const first = store.getState().campaigns.filter(camp => camp.id === loadedCamp)\r\n                setNewCampaignData(first[0])\r\n                setLoaded(true)\r\n            }\r\n        }\r\n        setEmailCSV(store.getState().emailList)\r\n    }, [])\r\n\r\n    const options = emailCSV ? emailCSV.map(list =>\r\n        <option key={list.id} value={list.id}>{list.name}</option>\r\n    ) : null;\r\n\r\n\r\n    const camNameRef = useRef(null)\r\n    const SenderNameRef = useRef(null)\r\n    const emailSubRef = useRef(null)\r\n    const SenderEmailRef = useRef(null)\r\n\r\n    console.log(newCampaignData.campName)\r\n\r\n\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <>\r\n            <div className=\"topNavCam  subWrapperCam\">\r\n                <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                    onClick={() => push(\"/dashboard\")}\r\n                >\r\n                    Back\r\n                </div>\r\n                {/* <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n                    <p>Save & Next</p>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolder\">\r\n                    <form className=\"formFields  Fields\">\r\n                        <div className=\"leftFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"camName\">Campaign Name</label>\r\n                                <input defaultValue={newCampaignData.name} ref={camNameRef} type=\"text\" id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderName\">Sender Name</label>\r\n                                <input defaultValue={newCampaignData.sender_name} ref={SenderNameRef} type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, sender_name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailSub\">Email Subject</label>\r\n                                <input defaultValue={newCampaignData.email_subject} ref={emailSubRef} type=\"text\" id=\"emailSub\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, email_subject: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rightFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n                                <input defaultValue={newCampaignData.sender_email} ref={SenderEmailRef} type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, sender_email: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailList\">Email Attachment</label>\r\n\r\n                                <input type=\"file\" id=\"emailList\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, attachment: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailLists\">Email List</label>\r\n                                {console.log(newCampaignData.camp_emails)}\r\n                                <select id=\"emailLists\" name=\"emailLists\" value={newCampaignData.camp_emails}\r\n                                    onChange={e => {\r\n                                        console.log(\"hey hey\", newCampaignData.camp_emails)\r\n                                        setNewCampaignData({ ...newCampaignData, camp_emails: e.target.value })\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    {options}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailBody\">Email Body</label>\r\n                                <div id=\"emailBody\" className=\"desBody Fields formButtonsCam\"\r\n                                    onClick={() => {\r\n\r\n                                        push(\"/dashboard/loadedcamp/maileditor\")\r\n                                        setTimeout(() => {\r\n                                            loadTheTemplate(newCampaignData.temp_json)\r\n                                        }, 500)\r\n                                    }}\r\n                                >\r\n                                    Deisgn Body\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtons Fields\">\r\n                        <animated.div className=\"sendButton Fields formButtonsCam\"\r\n                            style={upNsendButtonStyle}\r\n                            onClick={() => {\r\n                                //Updating\r\n                                setUpNsendButtonStyle({ transform: \"scaleX(1)\", text: \"Updating...\", backgroundColor: \"#389685ff\" })\r\n                                setTimeout(() => {\r\n                                    //console.log(newCampaignData.ht)\r\n                                    let dataForm = new FormData\r\n                                    let Jda = JSON.stringify(newCampaignData.temp_json)\r\n                                    dataForm.append(\"name\", newCampaignData.name)\r\n                                    dataForm.append(\"sender_name\", newCampaignData.sender_name)\r\n                                    dataForm.append(\"sender_email\", newCampaignData.sender_email)\r\n                                    dataForm.append(\"email_subject\", newCampaignData.email_subject)\r\n                                    dataForm.append(\"my_customer\", store.getState().userData.id)\r\n                                    dataForm.append(\"camp_emails\", newCampaignData.camp_emails)\r\n                                    dataForm.append(\"email_message\", \"will see\")\r\n                                    dataForm.append(\"temp_json\", Jda)\r\n                                    dataForm.append(\"ht\", newCampaignData.ht)\r\n                                    if (typeof (!newCampaignData.attachment) === 'string') {\r\n                                        dataForm.append(\"attachment\", newCampaignData.attachment)\r\n                                    }\r\n                                    axios.put(`https://emailengine2020.herokuapp.com/camprud/${store.getState().loadedCampaign.campId}/`,\r\n                                        dataForm\r\n                                    ).then(res => {\r\n                                        console.log(res)\r\n                                        console.log(\"reached res\")\r\n\r\n                                        store.dispatch(updateCampaign(store.getState().userData.id))\r\n\r\n                                        setUpNsendButtonStyle({ text: \"Sending...\", backgroundColor: \"#389685ff\" })\r\n                                        axios.post(`https://emailengine2020.herokuapp.com/campid/${store.getState().loadedCampaign.campId}/`).then(res => {\r\n                                            setTimeout(() => { setUpNsendButtonStyle({ text: \"Sent!\", backgroundColor: \"#656565ff\" }) }, 1000)\r\n                                            setTimeout(() => { push('/dashboard') }, 1300)\r\n                                        })\r\n                                    })\r\n                                        .catch(er => {\r\n                                            console.log(er)\r\n                                            console.log(\"reached er\")\r\n                                            if (er.response) {\r\n                                                console.log(er.response.data)\r\n                                                // if (er.response.status === 500) {\r\n                                                //     document.getElementsByClassName(\"addEmailList topButtonsCam subWrapperCam\")[0].click()\r\n                                                //     // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\r\n                                                // }\r\n                                            }\r\n                                        }\r\n                                        )\r\n\r\n                                }, 0)\r\n                                //only send\r\n                                // setUpNsendButtonStyle({ text: \"Sending...\", backgroundColor: \"#389685ff\" })\r\n                                // axios.post(`https://emailengine2020.herokuapp.com/campid/${newCampaignData.id}/`).then(res => {\r\n                                //     setTimeout(() => { setUpNsendButtonStyle({ text: \"Sent!\", backgroundColor: \"#656565ff\" }) }, 1000)\r\n                                //     setTimeout(() => { push('/dashboard') }, 1300)\r\n                                // })\r\n                            }}\r\n                        >\r\n                            {upNsendButtonStyle.text}{/* {update ? \"Update & Send\" : \"Save & Send\"} */}\r\n                        </animated.div>\r\n                        <animated.div className=\"createButton Fields formButtonsCam\"\r\n                            style={upNexitButtonStyle}\r\n                            onClick={() => {\r\n                                setUpNexitButtonStyle({ transform: \"scaleX(1)\", text: \"Updating...\", backgroundColor: \"#389685ff\" })\r\n                                setTimeout(() => {\r\n                                    //console.log(newCampaignData.ht)\r\n                                    let dataForm = new FormData\r\n                                    let Jda = JSON.stringify(newCampaignData.temp_json)\r\n                                    dataForm.append(\"name\", newCampaignData.name)\r\n                                    dataForm.append(\"sender_name\", newCampaignData.sender_name)\r\n                                    dataForm.append(\"sender_email\", newCampaignData.sender_email)\r\n                                    dataForm.append(\"email_subject\", newCampaignData.email_subject)\r\n                                    dataForm.append(\"my_customer\", store.getState().userData.id)\r\n                                    dataForm.append(\"camp_emails\", newCampaignData.camp_emails)\r\n                                    dataForm.append(\"email_message\", \"will see\")\r\n                                    dataForm.append(\"temp_json\", Jda)\r\n                                    dataForm.append(\"ht\", newCampaignData.ht)\r\n                                    if (typeof (!newCampaignData.attachment) === 'string') {\r\n                                        dataForm.append(\"attachment\", newCampaignData.attachment)\r\n                                    }\r\n                                    axios.put(`https://emailengine2020.herokuapp.com/camprud/${store.getState().loadedCampaign.campId}/`,\r\n                                        dataForm\r\n                                    ).then(res => {\r\n                                        console.log(res)\r\n                                        console.log(\"reached res\")\r\n\r\n                                        store.dispatch(updateCampaign(store.getState().userData.id))\r\n\r\n                                        setTimeout(() => {\r\n                                            setUpNexitButtonStyle({ text: \"Done!\", backgroundColor: \"#365194ff\" })\r\n\r\n                                        }, 1000)\r\n                                        setTimeout(() => { push('/dashboard') }, 1300)\r\n                                    })\r\n                                        .catch(er => {\r\n                                            console.log(er)\r\n                                            console.log(\"reached er\")\r\n                                            if (er.response) {\r\n                                                //console.log(er.response.data)\r\n                                                // if (er.response.status === 500) {\r\n                                                //     document.getElementsByClassName(\"addEmailList topButtonsCam subWrapperCam\")[0].click()\r\n                                                //     // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\r\n                                                // }\r\n                                            }\r\n                                        }\r\n                                        )\r\n\r\n                                }, 0)\r\n                            }}\r\n                        >\r\n                            {upNexitButtonStyle.text}\r\n                        </animated.div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoadedCampForm;"]},"metadata":{},"sourceType":"module"}