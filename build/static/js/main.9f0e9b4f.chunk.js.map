{"version":3,"sources":["buttons/index.js","actions/index.js","saga/index.js","reducers/index.js","store/store.js","components/SignInPage/signIn/signIn.js","components/SignInPage/signup/signUp.js","components/SignInPage/signMain.js","components/Dashboard/Email_Campaign_Lists/campaignHolder/campaigns/campaign.js","components/Dashboard/Email_Campaign_Lists/campaignHolder/campaignHolder.js","components/Dashboard/Email_Campaign_Lists/emailListHolder/EmailLists/emailList.js","components/Dashboard/Email_Campaign_Lists/emailListHolder/emailListHolder.js","components/Dashboard/Email_Campaign_Lists/twoLists.js","components/Dashboard/CreateCampaigns/campaignForm.js","components/Dashboard/CreateCampaigns/newCam.js","components/Dashboard/LoadedCampaigns/loadedCampForm.js","components/Dashboard/LoadedCampaigns/loadedCampaign.js","components/Dashboard/CreateEmailList/emailListForm.js","components/Dashboard/dashBoard.js","components/App.js","serviceWorker.js","index.js"],"names":["ButtonPopRightLite","forwardRef","ref","breath","grow","children","expand","title","useSpring","round1","round2","widthfont","xfront","round","setRound","rest","setRest","width","height","pusher","setPusher","flexGrow","opacity","textDes","setTextDes","config","duration","div","className","style","id","x","y","colorInterpolationFilters","stdDeviation","rect","mixBlendMode","fill","fillOpacity","filter","rx","ry","ActionTypes","storeUserRequest","payload","type","getAllEmailList","storeAllCampaigns","campaigns","addCampaign","updateCampaign","userId","watchUserSignIn","watchEmailListAdd","watchCampAdd","getEmailList","getCampaigns","updateCampaigns","fetchEmaillist","fetch","then","re","json","fetchCampaings","postEmaillist","data","axios","post","take","fork","call","console","log","postData","store","getState","userData","allEmailList","filteredEmailList","emailList","my_customer","put","delay","allCampaigns","filteredCampaigns","camp","initialUser","username","password","email","token","rootReducer","combineReducers","user","action","list","loadedCampaign","loadedCamp","campId","campName","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","SignIn","setUserName","setPassWord","push","setEmail","setId","useHistory","transform","text","backgroundColor","logButtonStyle","setLogButtonStyle","useState","expandEmail","expandGoogle","expandGuest","expandUser","expandPass","setExpand","googleRef","useRef","guestRef","emailRef","useEffect","localStorage","getItem","allreadyLoggedIn","allUserData","dispatch","current","addEventListener","xmlns","version","viewBox","d","strokeWidth","stroke","value","onChange","e","target","onFocus","onBlur","flexShrink","onMouseEnter","onMouseLeave","onClick","res","user_id","setItem","catch","err","response","request","strokeLinecap","strokeLinejoin","strokeOpacity","href","SignUp","userRef","passRef","conPassRef","position","newUser","alert","postNewUser","SignMain","setUserData","name","pass","Id","path","render","exact","Campaign","delete","Campaigns","camps","setCamps","unsubscribe","subscribe","map","key","EmailList","emailId","listName","file","EmailLists","lists","setLists","upload_file","TwoLists","butText","setButText","logOffButtonRef","flexBasis","svgMargin","logoffButtonStyle","setLogOffButtonStyle","mouseLeaveLogOff","length","clear","svg","marginLeft","cx","cy","CampForm","newCampaignData","setNewCampaignData","emailCSV","setEmailCSV","options","htmlFor","senderName","emailSub","senderEmail","emailAttachment","files","emailListCVS","NewCam","sendButtonStyle","setSendButtonStyle","saveNexitButtonStyle","setSaveNexitButtonStyle","emailBodyJSON","emailBodyHTML","emailEditorRef","editor","exportHtml","design","html","setTimeout","dataForm","FormData","Jda","JSON","stringify","append","Number","er","status","document","getElementsByClassName","click","LoadedCampForm","loadTheTemplate","loaded","setLoaded","upNexitButtonStyle","setUpNexitButtonStyle","upNsendButtonStyle","setUpNsendButtonStyle","first","camNameRef","SenderNameRef","emailSubRef","SenderEmailRef","defaultValue","sender_name","email_subject","sender_email","attachment","camp_emails","temp_json","ht","LoadedCamp","loadDesign","EmailListForm","emailListState","setEmailListState","formData","DashBoard","emailButtonStyle","setEmailButtonStyle","campButtonStyle","setCampButtonStyle","lineHeight","InkscapeFontSpecification","fontVariantLigatures","fontVariantCaps","fontVariantNumeric","fontVariantEastAsian","whiteSpace","ariaLabel","fontFamily","fontSize","fontStretch","fontStyle","fontVariant","fontWeight","App","Boolean","location","hostname","match","ReactDOM","Fragment","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9f0e9b4f.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport { } from 'react-dom';\r\nimport './buttons.css'\r\nimport { useSpring, config, animated } from 'react-spring'\r\n\r\nexport const ButtonPopRightLite = forwardRef(({ breath, grow, children, expand, title }, ref) => {\r\n    const [round, setRound] = useSpring(() => ({ round1: \"50%\", round2: \"50%\", widthfont: \"90%\", xfront: \"5%\" }))\r\n    const [rest, setRest] = useSpring(() => ({ widthfont: \"90%\", xfront: \"5%\" }))\r\n    const [pusher, setPusher] = useSpring(() => ({ width: `${breath}%`, height: \"100%\" }))\r\n    const [textDes, setTextDes] = useSpring(() => ({ flexGrow: 0, opacity: 0 }))\r\n\r\n\r\n    const pop = () => {\r\n\r\n        setRest({ widthfont: \"100%\", xfront: \"0%\" })\r\n        setRound({ round1: \"10%\", config: { duration: 90 } })\r\n        setPusher({ width: `${breath * grow}%` })\r\n        setTextDes({ flexGrow: grow - 1, opacity: 1 })\r\n    }\r\n\r\n    const shrink = () => {\r\n\r\n        setRest({ widthfont: \"90%\", xfront: \"5%\" })\r\n        setRound({ round1: \"50%\", config: { duration: 800 } })\r\n        setPusher({ width: `${breath}%` })\r\n        setTextDes({ flexGrow: 0, opacity: 0 })\r\n    }\r\n\r\n    expand ? pop() : shrink()\r\n    return (\r\n        <>\r\n            <animated.div className=\"liteWrapper\" style={pusher}>\r\n\r\n                <animated.div className=\"ten\" style={{ width: \"100%\", height: \"100%\" }}>\r\n\r\n                    <svg\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        className=\"tenSVG\"\r\n                    >\r\n                        <defs>\r\n                            <filter\r\n                                id=\"filter973\"\r\n                                width=\"10.278\"\r\n                                height=\"10.306\"\r\n                                x=\"-0.139\"\r\n                                y=\"-0.153\"\r\n                                colorInterpolationFilters=\"sRGB\"\r\n                            >\r\n                                <feGaussianBlur stdDeviation=\"10\"></feGaussianBlur>\r\n                            </filter>\r\n                        </defs>\r\n                        <animated.rect className=\"back\"\r\n                            style={{ mixBlendMode: \"normal\" }}\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                            fill=\"#000\"\r\n                            fillOpacity=\"0.214\"\r\n                            filter=\"url(#filter973)\"\r\n                            opacity=\"0.6\"\r\n                            rx={round.round1}\r\n                            ry={round.round2}\r\n                        ></animated.rect>\r\n                        <animated.rect className=\"font\"\r\n                            x={rest.xfront}\r\n                            y=\"5%\"\r\n                            width={rest.widthfont}\r\n                            height=\"90%\"\r\n                            fill=\"#fff\"\r\n                            rx={round.round1}\r\n                            ry={round.round2}\r\n                        ></animated.rect>\r\n\r\n                    </svg>\r\n\r\n                </animated.div>\r\n                <div className=\"infoWrapper\">\r\n                    <div className=\"svgHolder\">\r\n                        {children}\r\n                    </div>\r\n                    <animated.div className=\"textHolder\" style={textDes}>\r\n                        {title}\r\n                    </animated.div>\r\n                </div>\r\n                <animated.div className=\"eventDetector2\" ref={ref}></animated.div>\r\n            </animated.div>\r\n        </>\r\n\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const ButtonPopRight = forwardRef(({ grow, contract, children }, ref) => {\r\n//     const [textWidth, setTextWidth] = useSpring(() => ({ width: \"0vw\", opacity: 0, fontSize: `${grow.fontSize}vw` }))\r\n//     const [tranformWidth, setTranformWidth] = useSpring(() => ({ width: \"12.131\" }))\r\n//     const [tranformBackWidth, setTranformBackWidth] = useSpring(() => ({ width: \"13.173\" }))\r\n//     const [tranformX, setTranformX] = useSpring(() => ({ x: \"56.383\" }))\r\n//     const [tranformBackX, setTranformBackX] = useSpring(() => ({ x: \"55.877\" }))\r\n//     const [tranformWrapper, setTranformWrapper] = useSpring(() => ({ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min }))\r\n//     const [tranformSVG, setTranformSVG] = useSpring(() => ({ width: \"100%\", height: \"100%\" }))\r\n\r\n//     const shrink = () => {\r\n//         setTranformX({ x: \"56.383\", delay: 50 })\r\n//         setTranformBackX({ x: \"55.877\", delay: 50 })\r\n//         setTranformWidth({ width: \"12.131\" })\r\n//         setTranformBackWidth({ width: \"13.173\" })\r\n//         setTranformSVG({ width: \"100%\", height: \"100%\", delay: 50 })\r\n//         setTranformWrapper({ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min, delay: 300 })\r\n//         setTextWidth({ width: \"0vw\", opacity: 0, fontSize: `${grow.fontSize}vw` })\r\n//     }\r\n\r\n//     const expand = () => {\r\n//         setTranformX({ x: `${grow.transRect}`, delay: 30 })\r\n//         setTranformBackX({ x: `${grow.transRect}`, delay: 30 })\r\n//         setTranformWidth({ width: `${grow.front}`, delay: 30 })\r\n//         setTranformBackWidth({ width: `${grow.front}`, delay: 30 })\r\n//         setTranformSVG({ width: `${grow.SVG}%  `, height: \"100%\" })\r\n//         setTranformWrapper({ width: `${grow.grow}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min })\r\n//         setTextWidth({ width: `${grow.textWidth}vw`, opacity: 1, fontSize: `${grow.fontSize}vw`, delay: 200 })\r\n//     }\r\n\r\n//     contract ? shrink() : expand()\r\n//     try {\r\n//         return (\r\n//             <animated.div className=\"buttonWrapper\" style={tranformWrapper}>\r\n//                 <animated.svg\r\n//                     className=\"buttonSVG\"\r\n//                     xmlns=\"http://www.w3.org/2000/svg\"\r\n//                     width={tranformSVG.width}\r\n//                     height={tranformSVG.height}\r\n\r\n//                     version=\"1.1\"\r\n//                     viewBox=\"0 0 16.835 15.632\"\r\n//                 >\r\n//                     <defs>\r\n//                         <filter\r\n//                             id=\"filter973\"\r\n//                             width=\"1.278\"\r\n//                             height=\"1.306\"\r\n//                             x=\"-0.139\"\r\n//                             y=\"-0.153\"\r\n//                             colorInterpolationFilters=\"sRGB\"\r\n//                         >\r\n//                             <feGaussianBlur stdDeviation=\"0.763\"></feGaussianBlur>\r\n//                         </filter>\r\n//                     </defs>\r\n//                     <g\r\n//                         fillOpacity=\"1\"\r\n//                         strokeWidth=\"0.008\"\r\n//                         transform=\"translate(-54.046 -143.913)\"\r\n//                     >\r\n//                         <animated.rect\r\n//                             style={{ mixBlendMode: \"normal\" }}\r\n//                             width={tranformBackWidth.width}\r\n//                             height=\"11.97\"\r\n//                             x={tranformBackX.x}\r\n//                             y=\"145.744\"\r\n//                             fill=\"#000\"\r\n//                             fillOpacity=\"0.214\"\r\n//                             filter=\"url(#filter973)\"\r\n//                             opacity=\"0.799\"\r\n//                             rx=\"5.476\"\r\n//                             ry=\"5.985\"\r\n//                         ></animated.rect>\r\n//                         <animated.rect\r\n//                             width={tranformWidth.width}\r\n//                             height=\"11.331\"\r\n//                             x={tranformX.x}\r\n//                             y=\"146.041\"\r\n//                             fill=\"#fff\"\r\n//                             rx=\"6.065\"\r\n//                             ry=\"5.666\"\r\n//                         ></animated.rect>\r\n//                     </g>\r\n//                 </animated.svg>\r\n//                 <div style={{ width: `${grow.radius}vw`, height: `${grow.radius}vw`, minWidth: grow.min, minHeight: grow.min }} className=\"SVGcontainer\">\r\n//                     <animated.div style={textWidth} className=\"Text\">{grow.text}</animated.div>\r\n//                     {children}\r\n//                 </div>\r\n//                 <div className=\"eventDetector\" ref={ref}></div>\r\n//             </animated.div>\r\n\r\n//         );\r\n//     } catch {\r\n//         return (\r\n//             console.log(\"A Button should look like this and also have the same attributes <ButtonPopRight ontract={contract} grow={{radius:4, SVG:6, front:20, transRect:52,textWidth:4,fontSize:1, text:\\\"lets See\\\"}}><div className=\\\"child\\\"></div></ButtonPopRight>\")\r\n//         )\r\n//     }\r\n// });\r\n\r\n","export const ActionTypes = {\r\n    STORE_USER: \"STORE_USER\",\r\n    STORE_CAMPAIGN: \"STORE_CAMPAIGN\",\r\n    LOAD_CAMPAIGN: \"LOAD_CAMPAIGN\",\r\n    GET_ALL_EMAIL_LIST: \"GET_ALL_EMAIL_LIST\",\r\n    STORE_ALL_EMAIL_LIST: \"STORE_ALL_EMAIL_LIST\",\r\n    GET_ALL_CAMPAIGNS: \"GET_ALL_CAMPAIGNS\",\r\n    STORE_ALL_CAMPAIGNS: \"STORE_ALL_CAMPAIGNS\",\r\n    EMAIL_LIST_ADDED: \"EMAIL_LIST_ADDED\",\r\n    CAMPAIGNS_ADDED: \"CAMPAIGNS_ADDED\",\r\n    DELETE_CAMPAIGN: \"DELETE_CAMPAIGN\",\r\n    DELETE_EMAIL_LIST: \"DELETE_EMAIL_LIST\",\r\n    CAMPAIGN_UPDATED: \"CAMPAIGN_UPDATED\"\r\n};\r\n\r\nexport const storeUserRequest = (payload) => ({\r\n    type: ActionTypes.STORE_USER,\r\n    payload: payload,\r\n});\r\n\r\nexport const storeCampaign = (payload) => ({\r\n    type: ActionTypes.STORE_CAMPAIGN,\r\n    payload: payload,\r\n});\r\n\r\nexport const loadCampaign = (payload) => ({\r\n    type: ActionTypes.LOAD_CAMPAIGN,\r\n    payload: payload,\r\n});\r\n\r\nexport const getAllEmailList = (id) => ({\r\n    type: ActionTypes.GET_ALL_EMAIL_LIST,\r\n    payload: id\r\n});\r\n\r\nexport const getAllCampaigns = (id) => ({\r\n    type: ActionTypes.GET_ALL_CAMPAIGNS,\r\n    payload: id\r\n});\r\n\r\nexport const storeAllEmailList = (emailist) => ({\r\n    type: ActionTypes.STORE_ALL_EMAIL_LIST,\r\n    payload: emailist\r\n});\r\n\r\nexport const storeAllCampaigns = (campaigns) => ({\r\n    type: ActionTypes.STORE_ALL_CAMPAIGNS,\r\n    payload: campaigns\r\n});\r\n\r\nexport const addCampaign = () => ({\r\n    type: ActionTypes.CAMPAIGNS_ADDED,\r\n});\r\n\r\nexport const addEmailList = (data) => ({\r\n    type: ActionTypes.EMAIL_LIST_ADDED,\r\n    payload: data\r\n});\r\n\r\nexport const deleteCamp = (id) => ({\r\n    type: ActionTypes.DELETE_CAMPAIGN,\r\n    payload: id\r\n});\r\n\r\nexport const deleteEmailList = (id) => ({\r\n    type: ActionTypes.DELETE_EMAIL_LIST,\r\n    payload: id\r\n});\r\n\r\nexport const updateCampaign = (userId) => ({\r\n    type: ActionTypes.CAMPAIGN_UPDATED,\r\n    payload: userId\r\n});","import {\r\n    call, take, put, delay, fork\r\n} from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\nimport store from '../store/store'\r\nimport { ActionTypes, storeAllEmailList, storeAllCampaigns } from '../actions'\r\n\r\n\r\n\r\nconst fetchEmaillist = () => {\r\n    return fetch(\"https://emailengine2020.herokuapp.com/newemail/\").then(re => re.json())\r\n}\r\n\r\nconst fetchCampaings = () => {\r\n    return fetch(\"https://emailengine2020.herokuapp.com/newcampaign\").then(re => re.json())\r\n}\r\n\r\nconst postEmaillist = (data) => {\r\n    return axios.post(\"https://emailengine2020.herokuapp.com/newemail/\", data).then(re => re.data)\r\n\r\n\r\n}\r\n\r\nconst postCampaings = (data) => {\r\n    return fetch(\"https://emailengine2020.herokuapp.com/newcampaign\", data).then(re => re.json())\r\n}\r\n\r\nexport function* watchUserSignIn() {\r\n    while (true) {\r\n        const { payload } = yield take(ActionTypes.GET_ALL_EMAIL_LIST)\r\n        yield fork(watchEmailListAdd)\r\n        yield fork(watchCampAdd)\r\n        yield fork(updateCampaigns)\r\n        yield fork(getCampaigns, payload)\r\n        yield call(getEmailList, payload)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* watchEmailListAdd() {\r\n    while (true) {\r\n        console.log(\"watchEmailListAdd\")\r\n        const { payload } = yield take(ActionTypes.EMAIL_LIST_ADDED)\r\n        const postData = yield call(postEmaillist, payload)\r\n        console.log(postData)\r\n        yield call(getEmailList, store.getState().userData.id)\r\n    }\r\n}\r\n\r\nexport function* watchCampAdd() {\r\n    while (true) {\r\n        yield take(ActionTypes.CAMPAIGNS_ADDED)\r\n        yield call(getCampaigns, store.getState().userData.id)\r\n    }\r\n}\r\n\r\nexport function* getEmailList(payload) {\r\n    const allEmailList = yield call(fetchEmaillist)\r\n    console.log(allEmailList)\r\n    const filteredEmailList = allEmailList.filter(emailList => emailList.my_customer == payload)\r\n    console.log(filteredEmailList)\r\n    yield put(storeAllEmailList(filteredEmailList))\r\n}\r\n\r\nexport function* getCampaigns(payload) {\r\n    delay(300)\r\n    const allCampaigns = yield call(fetchCampaings)\r\n    const filteredCampaigns = allCampaigns.filter(camp => camp.my_customer == payload)\r\n    yield put(storeAllCampaigns(filteredCampaigns))\r\n}\r\n\r\nexport function* updateCampaigns() {\r\n    while (true) {\r\n        console.log(\"updateCampaigns \")\r\n        const { payload } = yield take(ActionTypes.CAMPAIGN_UPDATED)\r\n        console.log(\"CAMPAIGN_UPDATED \")\r\n        const allCampaigns = yield call(fetchCampaings)\r\n        const filteredCampaigns = allCampaigns.filter(camp => camp.my_customer === payload)\r\n        console.log(\"reached here\")\r\n        yield put(storeAllCampaigns(filteredCampaigns))\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { ActionTypes } from '../actions'\r\n\r\nlet lastCamp = 0\r\n\r\nconst initialUser = {\r\n    username: \"\",//string\r\n    password: \"\", //string\r\n    email: \"\",    //string\r\n    id: 0, //number\r\n    token: \"\"//string\r\n}\r\n\r\n\r\nconst storeUser = (user = initialUser, action) => {\r\n    if (action.type === ActionTypes.STORE_USER) {\r\n        return action.payload\r\n    }\r\n    return user\r\n};\r\n\r\nconst storeCampaign = (campaigns = [], action) => {\r\n    if (action.type === ActionTypes.STORE_ALL_CAMPAIGNS) {\r\n        return action.payload\r\n    } else if (action.type === ActionTypes.DELETE_CAMPAIGN) {\r\n        return campaigns.filter(camp => camp.id !== action.payload)\r\n    }\r\n    return campaigns\r\n};\r\n\r\nconst loadCampaign = (loadedCamp = { campId: 0, campName: \"\" }, action) => {\r\n    if (action.type === ActionTypes.LOAD_CAMPAIGN) {\r\n        return action.payload\r\n    }\r\n    return loadedCamp\r\n};\r\n\r\nconst storeEmailList = (emailList = [], action) => {\r\n    if (action.type === ActionTypes.STORE_ALL_EMAIL_LIST) {\r\n        return action.payload\r\n    } else if (action.type === ActionTypes.DELETE_EMAIL_LIST) {\r\n        return emailList.filter(list => list.id !== action.payload)\r\n    }\r\n    return emailList\r\n};\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    userData: storeUser,\r\n    campaigns: storeCampaign,\r\n    emailList: storeEmailList,\r\n    loadedCampaign: loadCampaign\r\n\r\n});\r\n\r\nexport default rootReducer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const modeTypeReducer = (mode={activeSend:false, activeMail:false}, action) => {\r\n//     if (action.type === \"MODE_SELECTED\"){\r\n//         if (action.payload === \"Send\"){\r\n//             return {activeSend:true, activeMail:false}\r\n//         }else if (action.payload === \"Mail\"){\r\n//             return {activeSend:false, activeMail:true}\r\n//         }else\r\n//             return mode \r\n//     }\r\n//     return mode \r\n// };\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { watchUserSignIn } from \"../saga\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(watchUserSignIn);\r\n\r\nexport default store;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport './signin.css';\r\nimport { ButtonPopRightLite } from '../../../buttons';\r\nimport store from '../../../store/store'\r\nimport { storeUserRequest, getAllEmailList } from '../../../actions'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nconst SignIn = ({ userData, setUserName, setPassWord, setEmail, setId }) => {\r\n    const { push } = useHistory(null)\r\n\r\n    const [logButtonStyle, setLogButtonStyle] = useSpring(() => ({ transform: \"scaleX(1)\", text: \"Login\", backgroundColor: \"#365194ff\" }))\r\n    const [expand, setExpand] = useState({\r\n        expandEmail: false, expandGoogle: false,\r\n        expandGuest: false, expandUser: true, expandPass: true\r\n    })\r\n\r\n    const googleRef = useRef(null)\r\n    const guestRef = useRef(null)\r\n    const emailRef = useRef(null)\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"id\")) { allreadyLoggedIn() }\r\n    })\r\n\r\n\r\n    const allreadyLoggedIn = () => {\r\n        const allUserData = {\r\n            id: localStorage.getItem(\"id\"),\r\n            username: localStorage.getItem(\"username\"),\r\n            // password: userData.password,\r\n            email: localStorage.getItem(\"email\"),\r\n            token: localStorage.getItem(\"token\"),\r\n\r\n        }\r\n        store.dispatch(storeUserRequest(allUserData))\r\n        store.dispatch(getAllEmailList(localStorage.getItem(\"id\")))\r\n        push(\"/dashboard\")\r\n    }\r\n\r\n    const login = () => {\r\n        setLogButtonStyle({ transform: \"scaleX(1)\", text: \"Authorizing...\", backgroundColor: \"#389685ff\" })\r\n        axios.post(\"https://emailengine2020.herokuapp.com/api-token-auth/\",\r\n            {\r\n                username: userData.username,\r\n                password: userData.password\r\n            }).then(res => {\r\n\r\n                const allUserData = {\r\n                    id: res.data.user_id,\r\n                    username: userData.username,\r\n                    // password: userData.password,\r\n                    email: res.data.email,\r\n                    token: res.data.token,\r\n                }\r\n                localStorage.setItem(\"id\", allUserData.id)\r\n                localStorage.setItem(\"username\", allUserData.username)\r\n                localStorage.setItem(\"email\", allUserData.email)\r\n                localStorage.setItem(\"token\", allUserData.token)\r\n                store.dispatch(storeUserRequest(allUserData))\r\n                store.dispatch(getAllEmailList(res.data.user_id))\r\n                push(\"/dashboard\")\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    setLogButtonStyle({ transform: \"scaleX(1)\", text: \"Not Authorized\", backgroundColor: \"#a42020ff\" })\r\n                } else if (err.request) {\r\n                    setLogButtonStyle({ transform: \"scaleX(1)\", text: \"Problem With Network\", backgroundColor: \"#656565ff\" })\r\n                } else {\r\n                    setLogButtonStyle({ transform: \"scaleX(1)\", text: \"Some Thing Went Wrong\", backgroundColor: \"#656565ff\" })\r\n                }\r\n            })\r\n        // console.log(userData.username, userData.password)\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        emailRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandEmail: true }));\r\n        emailRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandEmail: false }));\r\n        googleRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandGoogle: true }));\r\n        googleRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandGoogle: false }));\r\n        guestRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandGuest: true }));\r\n        guestRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandGuest: false }));\r\n        emailRef.current.addEventListener(\"click\", () => push(\"/signup\"));\r\n        googleRef.current.addEventListener(\"click\", () => push(\"/signup\"));\r\n        guestRef.current.addEventListener(\"click\", () => push(\"/signup\"));\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"inputHolder\">\r\n            <div className=\"loginTextDiv    signElements\">\r\n                Login\r\n                </div>\r\n            <div className=\"userNameDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"userNameInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandUser}\r\n                        title={\"username\"}\r\n                        breath={12} grow={3}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"0 0 83.41 83.41\"\r\n                        >\r\n                            <g transform=\"translate(3.692 -95.684)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    stroke=\"none\"\r\n                                    strokeWidth=\"1.144\"\r\n                                    d=\"M-96.838 11.309a157.626 157.626 0 00-157.625 157.627A157.626 157.626 0 00-96.838 326.56 157.626 157.626 0 0060.79 168.936 157.626 157.626 0 00-96.838 11.309zm0 52.867a48.065 48.065 0 0148.067 48.066 48.065 48.065 0 01-48.067 48.065 48.065 48.065 0 01-48.064-48.065 48.065 48.065 0 0148.064-48.066zm-.096 108.095a102.492 102.492 0 01.096 0A102.492 102.492 0 01.018 241.242a102.492 102.492 0 000 .002 120.87 120.87 0 01-96.856 48.56 120.87 120.87 0 01-96.855-48.56 102.492 102.492 0 0196.76-68.972z\"\r\n                                    opacity=\"1\"\r\n                                    transform=\"matrix(.26458 0 0 .26458 63.635 92.692)\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput  inputBox\" type=\"text\"\r\n                            value={userData.username}\r\n                            onChange={e => setUserName(e.target.value)}\r\n                            onFocus={() => { setExpand({ ...expand, expandUser: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandUser: true }) }}\r\n                        >\r\n                        </input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"passWordDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"passInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandPass}\r\n                        title={\"password\"}\r\n                        breath={12.5} grow={3}>\r\n                        <svg\r\n                            style={{ flexShrink: 0, flexGrow: 1 }}\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-5.2 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(-62.326 -93.44)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.325\"\r\n                                    d=\"M104.032 93.43a41.53 41.622 0 00-41.53 41.621 41.53 41.622 0 0041.53 41.622 41.53 41.622 0 0041.529-41.622 41.53 41.622 0 00-41.53-41.622zm.578 8.663a18.54 18.54 0 012.59.184c1.95.272 3.98.814 6.086 1.783 2.106.968 4.29 2.364 6.02 3.97 1.73 1.607 2.952 3.353 3.651 5.175.7 1.821.861 3.836.978 7.09.075 2.06.132 4.61.185 6.862 2.705.75 4.671 3.112 4.671 5.928v22.305c0 3.422-2.902 6.177-6.507 6.177H86.976c-3.604 0-6.506-2.755-6.506-6.177v-22.305c0-2.576 1.644-4.773 3.995-5.703.122-3.777.388-8.93.732-11.155.546-3.526 1.639-5.154 3.043-6.743 1.405-1.589 3.12-3.138 5.349-4.367 2.227-1.228 5.107-2.181 7.408-2.646a18.149 18.149 0 013.613-.378zm-.04 5.973c-.718.005-1.468.08-2.286.245-1.496.302-3.367.92-4.815 1.718-1.448.798-2.563 1.804-3.476 2.836-.913 1.031-1.623 2.088-1.978 4.378s-.355 5.812-.38 8a48.55 48.55 0 01-.04 1.665h25.784c-.002-.104-.006-.213-.01-.33-.05-1.611-.1-4.58-.177-6.693-.076-2.114-.181-3.422-.635-4.604-.455-1.183-1.25-2.316-2.373-3.36-1.124-1.043-2.544-1.95-3.913-2.578a13.988 13.988 0 00-3.956-1.157 11.986 11.986 0 00-1.745-.12zm.04 27.216c-1.387 0-2.708.431-3.633 1.186-.038.004-.075.008-.112.01a6.08 6.04 0 00-2.354 4.773 6.08 6.04 0 003.053 5.238v5.95c0 .874 1.322 1.577 2.965 1.577 1.643 0 2.965-.703 2.965-1.576v-5.882a6.08 6.04 0 003.178-5.307 6.08 6.04 0 00-3.462-5.45.316.316 0 01-.053.006 6.288 6.288 0 00-2.546-.524z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput inputBox\" type=\"password\"\r\n                            onChange={e => setPassWord(e.target.value)}\r\n                            onFocus={() => { setExpand({ ...expand, expandPass: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandPass: true }) }}\r\n                        ></input>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"loginButtonDiv  signElements\">\r\n                <animated.div style={logButtonStyle} className=\"loginButton\"\r\n                    onMouseEnter={() => setLogButtonStyle({ transform: \"scaleX(1.1)\", text: \"Login\", backgroundColor: \"#5976c1ff\" })}\r\n                    onMouseLeave={() => {\r\n                        if (logButtonStyle.text.value === \"Login\") {\r\n                            setLogButtonStyle({ transform: \"scaleX(1)\", backgroundColor: \"#365194ff\" })\r\n                        }\r\n                    }\r\n                    }\r\n                    onClick={() => login()}\r\n                >{logButtonStyle.text}</animated.div>\r\n                {/*\r\n                <p>Login</p>\r\n                <div className=\"clickDetector\" width=\"100%\" height=\"100%\"\r\n                    onClick={() => login()}\r\n                >\r\n                </div> */}\r\n            </div>\r\n            <div className=\"signUpDiv       signElements\">\r\n                <div className=\"signUpText subSignUpDiv\">\r\n                    don't have an account?\r\n                </div>\r\n                <div className=\"signUpButtons subSignUpDiv\">\r\n                    <ButtonPopRightLite ref={emailRef} expand={expand.expandEmail}\r\n                        title={\"Sign up with Email\"}\r\n                        breath={14} grow={4.5}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"60%\"\r\n                            height=\"60%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"0 0 83.036 83.036\"\r\n                        >\r\n                            <g transform=\"translate(-47.178 -71.932)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.372\"\r\n                                    d=\"M56.017 84.08c-4.848 0-8.752 3.678-8.752 8.246v3.826L85.11 125.26c1.53 1.023 2.317 1.168 4.143 1.604 1.845-.325 3.428-.651 4.697-2.15 6.17-4.635 12.339-9.272 18.507-13.908l17.679-13.413v-5.067c0-4.568-3.903-8.245-8.751-8.245zm-8.752 18.061v35.055c0 4.568 3.904 8.245 8.752 8.245h65.368c4.848 0 8.75-3.677 8.75-8.245v-33.853c-12.011 9.135-24.024 18.29-36.04 27.203-1.77 1.299-3.17 1.791-4.867 1.697-1.432.063-3.012-.242-4.296-1.132l-37.667-28.97zm90.09 48.362a61.948 61.158 0 01-.517.644c.18-.202.352-.416.517-.644z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <ButtonPopRightLite ref={googleRef} expand={expand.expandGoogle}\r\n                        title={\"Sign up with Google\"}\r\n                        breath={14} grow={4.5}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"60%\"\r\n                            height=\"60%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"0 0 33.883 34.604\"\r\n                        >\r\n                            <g transform=\"translate(-113.082 -182.27)\">\r\n                                <g fillOpacity=\"1\">\r\n                                    <path\r\n                                        fill=\"#e94235\"\r\n                                        strokeWidth=\"0.218\"\r\n                                        d=\"M130.352 182.27c-9.463 0-17.134 7.73-17.134 17.266 0 9.536 7.671 17.266 17.134 17.266 8.601 0 15.132-5.804 16.357-14.124 0 0 .024-.178.035-.273l.04-.323c.075-.645.122-1.303.132-1.975.005-.362-.054-.9-.131-1.468v-1.787a.477.477 0 00-.478-.478H130.9a.477.477 0 00-.478.478v5.568c0 .265.213.478.478.478h8.9c-1.147 4.291-4.463 7.082-9.234 7.082-5.665 0-10.257-4.628-10.257-10.336 0-5.68 4.547-10.296 10.183-10.337h.074c2.407 0 4.737.854 6.582 2.41l4.82-4.873a17.062 17.062 0 00-11.617-4.574z\"\r\n                                    ></path>\r\n                                    <path\r\n                                        fill=\"#4285f4\"\r\n                                        strokeWidth=\"0.218\"\r\n                                        d=\"M130.9 196.374a.477.477 0 00-.477.478v5.568c0 .265.213.478.478.478h8.9c-.614 2.298-1.851 4.165-3.6 5.404l5.344 4.336a16.658 16.658 0 005.164-9.96c.114-.899.235-1.579.256-2.571.003-1.319-.055-2.029-.18-3.255-.027-.264-.213-.478-.478-.478z\"\r\n                                    ></path>\r\n                                    <path\r\n                                        fill=\"#34a853\"\r\n                                        strokeWidth=\"0.218\"\r\n                                        d=\"M120.817 202.818l-5.878 4.53c2.817 5.647 8.615 9.525 15.315 9.525 4.47 0 8.394-1.56 11.291-4.235l-5.344-4.336c-1.604 1.062-3.468 1.699-5.732 1.677-4.5-.043-8.183-2.999-9.652-7.16z\"\r\n                                    ></path>\r\n                                    <path\r\n                                        fill=\"#fabb05\"\r\n                                        stroke=\"none\"\r\n                                        strokeLinecap=\"butt\"\r\n                                        strokeLinejoin=\"miter\"\r\n                                        strokeOpacity=\"1\"\r\n                                        strokeWidth=\"0.265\"\r\n                                        d=\"M115.008 191.838c-1.144 2.315-1.926 4.895-1.926 7.656 0 2.834.682 5.505 1.882 7.865l5.853-4.54a9.967 9.967 0 01-.511-3.207c0-1.172.247-2.166.533-3.287z\"\r\n                                    ></path>\r\n                                </g>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <ButtonPopRightLite ref={guestRef} expand={expand.expandGuest}\r\n                        title={\"Explore as Guest\"}\r\n                        breath={14} grow={4.5}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"60%\"\r\n                            height=\"60%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"0 0 86.522 94.45\"\r\n                        >\r\n                            <g\r\n                                fill=\"#148e94\"\r\n                                fillOpacity=\"1\"\r\n                                strokeWidth=\"0.265\"\r\n                                transform=\"translate(-63.635 -92.692)\"\r\n                            >\r\n                                <path\r\n                                    d=\"M114.667 149.87c.019.46-.455 1.01-1.052 1.837-.784 1.085-1.79 2.663-2.683 4.138a69.293 69.293 0 00-1.247 2.134c-.895-.476-1.893-.803-3.104-.788-1.168.014-2.417.342-3.57.813-.24-.414-.55-.915-.994-1.615a551.497 551.497 0 00-3.4-5.267c-.326-.5-.557-.85-.672-1.108a58.964 58.964 0 00-34.31 18.133 58.964 58.964 0 0086.522.192 58.964 58.964 0 00-35.49-18.468zm-8.37 10.952c.819-.01 1.608.212 2.33.558.085.546.266 1.284.578 2.42.775 2.822 2.34 8.092 3.089 10.796.749 2.704.71 2.933-.34 4.188-1.051 1.256-2.928 4.286-3.979 5.484-1.05 1.199-1.12 2.874-3.99-.524-1.053-1.248-2.116-3.38-3.314-4.565-1.199-1.184-1.198-1.26-.43-4.098.77-2.838 2.306-8.438 3.018-11.542.177-.771.303-1.387.388-1.888.937-.452 1.929-.82 2.65-.83z\"\r\n                                    opacity=\"0.729\"\r\n                                ></path>\r\n                                <path\r\n                                    d=\"M105.003 92.692c-5.63.01-11.209.256-14.272.475-3.5.25-3.714.464-3.428 3.858.286 3.393.51 9.965.76 13.251.25 3.286.526 3.286-1.224 3.214-1.75-.071-4.965-.214-6.644-.286-1.679-.07-1.822-.071-1.893 1.215-.072 1.286-.071 3.857-.179 5.179-.1 1.243-.135 1.36 7.64 1.408a21.167 21.167 0 00-.575 4.904c0 11.69 9.476 21.166 21.166 21.166s21.167-9.476 21.167-21.166c0-1.679-.2-3.35-.595-4.982 7.565-.118 7.668-.378 7.702-1.437.035-1.143.107-3.214.178-4.393.072-1.179.521-1.668-.98-1.839-1.503-.17-4.948-.054-6.52-.054-1.572 0-1.643.07-1.5-3.108.143-3.178.5-9.607.536-12.894.036-3.286-.25-3.428-3.393-3.714a208.136 208.136 0 00-15.537-.786c-.8-.009-1.605-.012-2.409-.01z\"\r\n                                    opacity=\"0.729\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                </div>\r\n            </div>\r\n            < div className=\"resetPassDiv signElements\" >\r\n                Forgot your password ? &nbsp; <a href=\"\"> Reset </a>\r\n            </div >\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React, { useEffect, useState, useRef } from 'react';\r\nimport './signup.css';\r\nimport { ButtonPopRightLite } from '../../../buttons';\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst SignUp = ({ setUserName }) => {\r\n    const { push } = useHistory(null)\r\n\r\n\r\n    const [expand, setExpand] = useState({\r\n        expandEmail: false, expandGoogle: false,\r\n        expandGuest: false, expandUser: true, expandPass: true\r\n    })\r\n\r\n    const userRef = useRef(null)\r\n    const emailRef = useRef(null)\r\n    const passRef = useRef(null)\r\n    const conPassRef = useRef(null)\r\n\r\n    const postNewUser = () => {\r\n        if (conPassRef.current.value === passRef.current.value) {\r\n            if (conPassRef.current.value && passRef.current.value && userRef.current.value && emailRef.current.value) {\r\n                const newUser = {\r\n                    username: userRef.current.value,\r\n                    email: emailRef.current.value,\r\n                    password: passRef.current.value,\r\n                }\r\n                axios.post(\"http://emailengine2020.herokuapp.com/contactapi/users/\", newUser)\r\n                    .then(res => console.log(res))\r\n                setUserName(userRef.current.value)\r\n                push(\"/\")\r\n            } else alert(\"Please fill all fields\")\r\n\r\n        } else alert(\"Passwords do not match\")\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // emailRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandEmail: true }))\r\n        // emailRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandEmail: false }))\r\n        // googleRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandGoogle: true }))\r\n        // googleRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandGoogle: false }))\r\n        // guestRef.current.addEventListener(\"mouseenter\", () => setExpand({ ...expand, expandGuest: true }))\r\n        // guestRef.current.addEventListener(\"mouseleave\", () => setExpand({ ...expand, expandGuest: false }))\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"inputHolder\">\r\n            <div className=\"loginTextDiv    signElements\">\r\n                SignUp\r\n            </div>\r\n            <div className=\"userNameDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"userNameInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandUser}\r\n                        title={\"username\"}\r\n                        breath={12} grow={3}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-5.2 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(3.692 -95.684)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    stroke=\"none\"\r\n                                    strokeWidth=\"1.144\"\r\n                                    d=\"M-96.838 11.309a157.626 157.626 0 00-157.625 157.627A157.626 157.626 0 00-96.838 326.56 157.626 157.626 0 0060.79 168.936 157.626 157.626 0 00-96.838 11.309zm0 52.867a48.065 48.065 0 0148.067 48.066 48.065 48.065 0 01-48.067 48.065 48.065 48.065 0 01-48.064-48.065 48.065 48.065 0 0148.064-48.066zm-.096 108.095a102.492 102.492 0 01.096 0A102.492 102.492 0 01.018 241.242a102.492 102.492 0 000 .002 120.87 120.87 0 01-96.856 48.56 120.87 120.87 0 01-96.855-48.56 102.492 102.492 0 0196.76-68.972z\"\r\n                                    opacity=\"1\"\r\n                                    transform=\"matrix(.26458 0 0 .26458 63.635 92.692)\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput  inputBox\" type=\"text\"\r\n                            ref={userRef}\r\n                            onFocus={() => { setExpand({ ...expand, expandUser: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandUser: true }) }}\r\n                        ></input>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"userNameDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"userNameInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandUser}\r\n                        title={\"email\"}\r\n                        breath={12} grow={2.2}>\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-7 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(-62.326 -93.44)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.351\"\r\n                                    d=\"M104.031 93.44a41.705 41.705 0 00-41.705 41.705 41.705 41.705 0 0041.705 41.705 41.705 41.705 0 0041.706-41.705A41.705 41.705 0 00104.03 93.44zm-21.9 22.092h44.008c3.264 0 5.891 2.508 5.891 5.623v3.455l-11.901 9.147-12.46 9.485c-.854 1.021-1.92 1.243-3.162 1.465-1.23-.297-1.76-.395-2.79-1.093l-25.478-19.85v-2.61c0-3.114 2.628-5.622 5.893-5.622zm-5.892 12.316l25.359 19.756c.864.607 1.928.814 2.892.771 1.143.064 2.085-.27 3.277-1.156 8.09-6.079 16.177-12.322 24.263-18.552v23.086c0 3.115-2.627 5.623-5.891 5.623H82.132c-3.265 0-5.893-2.508-5.893-5.623z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput  inputBox\" type=\"text\"\r\n                            ref={emailRef}\r\n                            onFocus={() => { setExpand({ ...expand, expandUser: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandUser: true }) }}\r\n                        ></input>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"passWordDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"passInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandPass}\r\n                        title={\"password\"}\r\n                        breath={12} grow={3}>\r\n                        {/* <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-7 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(-62.326 -93.44)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.351\"\r\n                                    d=\"M104.031 93.44a41.705 41.705 0 00-41.705 41.705 41.705 41.705 0 0041.705 41.705 41.705 41.705 0 0041.706-41.705A41.705 41.705 0 00104.03 93.44zm-21.9 22.092h44.008c3.264 0 5.891 2.508 5.891 5.623v3.455l-11.901 9.147-12.46 9.485c-.854 1.021-1.92 1.243-3.162 1.465-1.23-.297-1.76-.395-2.79-1.093l-25.478-19.85v-2.61c0-3.114 2.628-5.622 5.893-5.622zm-5.892 12.316l25.359 19.756c.864.607 1.928.814 2.892.771 1.143.064 2.085-.27 3.277-1.156 8.09-6.079 16.177-12.322 24.263-18.552v23.086c0 3.115-2.627 5.623-5.891 5.623H82.132c-3.265 0-5.893-2.508-5.893-5.623z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg> */}\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-5.2 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(-62.326 -93.44)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.325\"\r\n                                    d=\"M104.032 93.43a41.53 41.622 0 00-41.53 41.621 41.53 41.622 0 0041.53 41.622 41.53 41.622 0 0041.529-41.622 41.53 41.622 0 00-41.53-41.622zm.578 8.663a18.54 18.54 0 012.59.184c1.95.272 3.98.814 6.086 1.783 2.106.968 4.29 2.364 6.02 3.97 1.73 1.607 2.952 3.353 3.651 5.175.7 1.821.861 3.836.978 7.09.075 2.06.132 4.61.185 6.862 2.705.75 4.671 3.112 4.671 5.928v22.305c0 3.422-2.902 6.177-6.507 6.177H86.976c-3.604 0-6.506-2.755-6.506-6.177v-22.305c0-2.576 1.644-4.773 3.995-5.703.122-3.777.388-8.93.732-11.155.546-3.526 1.639-5.154 3.043-6.743 1.405-1.589 3.12-3.138 5.349-4.367 2.227-1.228 5.107-2.181 7.408-2.646a18.149 18.149 0 013.613-.378zm-.04 5.973c-.718.005-1.468.08-2.286.245-1.496.302-3.367.92-4.815 1.718-1.448.798-2.563 1.804-3.476 2.836-.913 1.031-1.623 2.088-1.978 4.378s-.355 5.812-.38 8a48.55 48.55 0 01-.04 1.665h25.784c-.002-.104-.006-.213-.01-.33-.05-1.611-.1-4.58-.177-6.693-.076-2.114-.181-3.422-.635-4.604-.455-1.183-1.25-2.316-2.373-3.36-1.124-1.043-2.544-1.95-3.913-2.578a13.988 13.988 0 00-3.956-1.157 11.986 11.986 0 00-1.745-.12zm.04 27.216c-1.387 0-2.708.431-3.633 1.186-.038.004-.075.008-.112.01a6.08 6.04 0 00-2.354 4.773 6.08 6.04 0 003.053 5.238v5.95c0 .874 1.322 1.577 2.965 1.577 1.643 0 2.965-.703 2.965-1.576v-5.882a6.08 6.04 0 003.178-5.307 6.08 6.04 0 00-3.462-5.45.316.316 0 01-.053.006 6.288 6.288 0 00-2.546-.524z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput inputBox\" type=\"password\"\r\n                            ref={passRef}\r\n                            onFocus={() => { setExpand({ ...expand, expandPass: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandPass: true }) }}\r\n                        ></input>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"passWordDiv     signElements\">\r\n                <svg className=\"inputSVG\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 132.131 24.137\"\r\n                >\r\n                    <defs>\r\n                        <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        <filter\r\n                            id=\"filter2821\"\r\n                            width=\"1.053\"\r\n                            height=\"1.309\"\r\n                            x=\"-0.026\"\r\n                            y=\"-0.155\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"1.188\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g transform=\"translate(-125.17 -121.658)\">\r\n                        <g\r\n                            fillOpacity=\"1\"\r\n                            strokeWidth=\"0.029\"\r\n                            transform=\"matrix(1.15734 0 0 1 -21.5 -34.309)\"\r\n                        >\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2821)\"\r\n                                opacity=\"0.764\"\r\n                                rx=\"7.311\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"108.464\"\r\n                                height=\"18.432\"\r\n                                x=\"129.583\"\r\n                                y=\"158.819\"\r\n                                fill=\"#1ca7d1\"\r\n                                rx=\"4.101\"\r\n                                ry=\"6.172\"\r\n                            ></rect>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <div className=\"passInputHolder insideInputDivs\">\r\n                    <ButtonPopRightLite expand={expand.expandPass}\r\n                        title={\"confirm password\"}\r\n                        breath={12} grow={5.8}>\r\n                        <svg\r\n                            style={{ flexShrink: 0, flexGrow: 1 }}\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"75%\"\r\n                            height=\"75%\"\r\n                            version=\"1.1\"\r\n                            viewBox=\"-5.2 -5 93.41 93.41\"\r\n                        >\r\n                            <g transform=\"translate(-62.326 -93.44)\">\r\n                                <path\r\n                                    fill=\"#496885\"\r\n                                    fillOpacity=\"1\"\r\n                                    strokeWidth=\"0.325\"\r\n                                    d=\"M104.032 93.43a41.53 41.622 0 00-41.53 41.621 41.53 41.622 0 0041.53 41.622 41.53 41.622 0 0041.529-41.622 41.53 41.622 0 00-41.53-41.622zm.578 8.663a18.54 18.54 0 012.59.184c1.95.272 3.98.814 6.086 1.783 2.106.968 4.29 2.364 6.02 3.97 1.73 1.607 2.952 3.353 3.651 5.175.7 1.821.861 3.836.978 7.09.075 2.06.132 4.61.185 6.862 2.705.75 4.671 3.112 4.671 5.928v22.305c0 3.422-2.902 6.177-6.507 6.177H86.976c-3.604 0-6.506-2.755-6.506-6.177v-22.305c0-2.576 1.644-4.773 3.995-5.703.122-3.777.388-8.93.732-11.155.546-3.526 1.639-5.154 3.043-6.743 1.405-1.589 3.12-3.138 5.349-4.367 2.227-1.228 5.107-2.181 7.408-2.646a18.149 18.149 0 013.613-.378zm-.04 5.973c-.718.005-1.468.08-2.286.245-1.496.302-3.367.92-4.815 1.718-1.448.798-2.563 1.804-3.476 2.836-.913 1.031-1.623 2.088-1.978 4.378s-.355 5.812-.38 8a48.55 48.55 0 01-.04 1.665h25.784c-.002-.104-.006-.213-.01-.33-.05-1.611-.1-4.58-.177-6.693-.076-2.114-.181-3.422-.635-4.604-.455-1.183-1.25-2.316-2.373-3.36-1.124-1.043-2.544-1.95-3.913-2.578a13.988 13.988 0 00-3.956-1.157 11.986 11.986 0 00-1.745-.12zm.04 27.216c-1.387 0-2.708.431-3.633 1.186-.038.004-.075.008-.112.01a6.08 6.04 0 00-2.354 4.773 6.08 6.04 0 003.053 5.238v5.95c0 .874 1.322 1.577 2.965 1.577 1.643 0 2.965-.703 2.965-1.576v-5.882a6.08 6.04 0 003.178-5.307 6.08 6.04 0 00-3.462-5.45.316.316 0 01-.053.006 6.288 6.288 0 00-2.546-.524z\"\r\n                                    opacity=\"1\"\r\n                                ></path>\r\n                            </g>\r\n                        </svg>\r\n                    </ButtonPopRightLite>\r\n                    <div className=\"inputActual\">\r\n                        <input className=\"userNameInput inputBox\" type=\"password\"\r\n                            ref={conPassRef}\r\n                            onFocus={() => { setExpand({ ...expand, expandPass: false }) }}\r\n                            onBlur={() => { setExpand({ ...expand, expandPass: true }) }}\r\n                        ></input>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"loginButtonDiv  signElements\">\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"90%\"\r\n                    height=\"90%\"\r\n                    style={{ position: \"absolute\" }}\r\n                    version=\"1.1\"\r\n                    viewBox=\"0 0 210.414 55.444\"\r\n                >\r\n                    <defs>\r\n                        <filter\r\n                            id=\"filter1574\"\r\n                            width=\"1.131\"\r\n                            height=\"1.789\"\r\n                            x=\"-0.066\"\r\n                            y=\"-0.394\"\r\n                            colorInterpolationFilters=\"sRGB\"\r\n                        >\r\n                            <feGaussianBlur stdDeviation=\"5.094\"></feGaussianBlur>\r\n                        </filter>\r\n                    </defs>\r\n                    <g\r\n                        fillOpacity=\"1\"\r\n                        strokeWidth=\"0.295\"\r\n                        transform=\"translate(-33.132 -90.584)\"\r\n                    >\r\n                        <rect\r\n                            width=\"220.964\"\r\n                            height=\"30.994\"\r\n                            x=\"25.357\"\r\n                            y=\"102.81\"\r\n                            fill=\"#bababaff\"\r\n                            stroke=\"none\"\r\n                            filter=\"url(#filter1574)\"\r\n                            opacity=\"1\"\r\n                            rx=\"5.849\"\r\n                            ry=\"7.548\"\r\n                        ></rect>\r\n                        <rect\r\n                            width=\"220.964\"\r\n                            height=\"30.994\"\r\n                            x=\"25.357\"\r\n                            y=\"102.81\"\r\n                            fill=\"#286db2ff\"\r\n                            opacity=\"1\"\r\n                            rx=\"5.849\"\r\n                            ry=\"7.548\"\r\n                        ></rect>\r\n                    </g>\r\n                </svg>\r\n                <p>SignUp</p>\r\n                <div className=\"clickDetector\"\r\n                    onClick={() => { postNewUser() }}\r\n                ></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React, { useState } from 'react';\r\nimport './signMain.css';\r\nimport SignIn from './signIn/signIn'\r\nimport SignUp from './signup/signUp'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n\r\nfunction SignMain() {\r\n\r\n    const [userData, setUserData] = useState({\r\n        username: \"\",//string\r\n        password: \"\", //string\r\n        email: \"\",    //string\r\n        id: 0 //number\r\n    })\r\n\r\n    const setUserName = name => {\r\n        setUserData({ ...userData, username: name })\r\n    }\r\n\r\n    const setPassWord = pass => {\r\n        setUserData({ ...userData, password: pass })\r\n    }\r\n\r\n    const setEmail = email => {\r\n        setUserData({ ...userData, email: email })\r\n    }\r\n\r\n    const setId = Id => {\r\n        setUserData({ ...userData, id: Id })\r\n    }\r\n\r\n    return (\r\n        <div className=\"signinWrapperWrapper\">\r\n            <div className=\"signinWrapper\">\r\n                <div className=\"signInBox\">\r\n                    <svg className=\"signIn\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        version=\"1.1\"\r\n                        viewBox=\"0 0 159.773 170.181\"\r\n                    >\r\n                        <defs>\r\n                            <path d=\"M23.435 201.083H155.727V271.387H23.435z\"></path>\r\n                            <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                            <path d=\"M133.804 176.893H199.572V219.226H133.804z\"></path>\r\n                            <filter\r\n                                id=\"filter2371\"\r\n                                width=\"1.162\"\r\n                                height=\"1.15\"\r\n                                x=\"-0.081\"\r\n                                y=\"-0.075\"\r\n                                colorInterpolationFilters=\"sRGB\"\r\n                            >\r\n                                <feGaussianBlur stdDeviation=\"4.713\"></feGaussianBlur>\r\n                            </filter>\r\n                            <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                            <path d=\"M137.583 180.673H219.226V228.298H137.583z\"></path>\r\n                        </defs>\r\n                        <g strokeWidth=\"0.265\" transform=\"translate(-103.432 -69.502)\">\r\n                            <rect\r\n                                width=\"139.851\"\r\n                                height=\"150.435\"\r\n                                x=\"113.393\"\r\n                                y=\"79.375\"\r\n                                fill=\"#4d4d4d\"\r\n                                filter=\"url(#filter2371)\"\r\n                                opacity=\"1\"\r\n                                rx=\"0\"\r\n                                ry=\"4.11\"\r\n                                transform=\"translate(3.047 2.57) scale(.98338)\"\r\n                            ></rect>\r\n                            <rect\r\n                                width=\"139.851\"\r\n                                height=\"150.435\"\r\n                                x=\"114.499\"\r\n                                y=\"78.357\"\r\n                                fill=\"#fff\"\r\n                                rx=\"5.641\"\r\n                                ry=\"6.31\"\r\n                            ></rect>\r\n                        </g>\r\n                    </svg>\r\n                    <Switch>\r\n                        <Route path=\"/signup\" render={() =>\r\n                            <SignUp setUserName={setUserName}\r\n                            ></SignUp>\r\n                        }></Route>\r\n                        <Route exact path=\"/\" render={() =>\r\n                            <SignIn userData={userData}\r\n                                setUserName={setUserName}\r\n                                setPassWord={setPassWord}\r\n                                setEmail={setEmail}\r\n                                setId={setId}\r\n                            ></SignIn>\r\n                        }></Route>\r\n                    </Switch>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignMain","import React, { useState } from 'react';\r\nimport './campaign.css'\r\nimport store from '../../../../../store/store'\r\nimport { loadCampaign, deleteCamp } from '../../../../../actions'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nconst Campaign = ({ campId, campName }) => {\r\n\r\n    const { push } = useHistory(null)\r\n\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"campName\">\r\n                {campName}\r\n            </div>\r\n            <div className=\"loadButtonHolder\">\r\n                <div className=\"loadButton\"\r\n                    onClick={() => {\r\n                        store.dispatch(loadCampaign({ campId, campName }));\r\n                        push(\"/dashboard/loadedcamp\")\r\n                    }}\r\n                >\r\n                    Load\r\n                </div>\r\n                <div className=\"deleteButton loadButton\"\r\n                    onClick={() => {\r\n                        axios.delete(`https://emailengine2020.herokuapp.com/camprud/${campId}/`)\r\n                            .then(\r\n                                res => {\r\n                                    console.log(res)\r\n                                    store.dispatch(deleteCamp(campId))\r\n                                }\r\n                            )\r\n\r\n\r\n                    }}\r\n                >\r\n                    Delete\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Campaign;","import React, { useEffect, useState } from 'react';\r\nimport Campaign from './campaigns/campaign'\r\nimport store from '../../../../store/store'\r\nimport { cleanup } from '@testing-library/react';\r\n\r\nconst Campaigns = () => {\r\n    const [camps, setCamps] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = store.subscribe(() => setCamps(store.getState().campaigns))\r\n        setCamps(store.getState().campaigns)\r\n        console.log(store.getState().campaigns)\r\n        const cleanup = () => unsubscribe()\r\n        return cleanup\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"subContentActual\">\r\n            {camps ? camps.map(camp => <Campaign\r\n                key={camp.id}\r\n                campId={camp.id}\r\n                campName={camp.name}></Campaign>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Campaigns;","import React from 'react';\r\nimport './emaillist.css';\r\nimport axios from 'axios'\r\nimport { deleteEmailList } from '../../../../../actions'\r\nimport store from '../../../../../store/store'\r\n\r\nconst EmailList = ({ emailId, listName, file }) => {\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"campNameEmail\">\r\n                {listName}\r\n            </div>\r\n            <div className=\"loadButtonHolderEmail\">\r\n                <div className=\"loadButtonEmail\"\r\n                    onClick={() => {\r\n                        axios.delete(`https://emailengine2020.herokuapp.com/emailrud/${emailId}/`)\r\n                            .then(\r\n                                res => {\r\n                                    console.log(res)\r\n                                    store.dispatch(deleteEmailList(emailId))\r\n                                }\r\n\r\n                            )\r\n                    }}\r\n                >\r\n                    Delete\r\n                    {/* <a className=\"downloader\" herf={file} dowload></a> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmailList;","import React, { useState, useEffect } from 'react';\r\nimport store from '../../../../store/store'\r\nimport EmailList from './EmailLists/emailList'\r\n\r\nconst EmailLists = () => {\r\n    const [lists, setLists] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = store.subscribe(() => setLists(store.getState().emailList))\r\n        setLists(store.getState().emailList)\r\n        const cleanup = () => unsubscribe()\r\n        return cleanup\r\n    })\r\n    return (\r\n        <div className=\"subContentActual\">\r\n            {lists ? lists.map(list =>\r\n                <EmailList key={list.id} emailId={list.id} listName={list.name} file={list.upload_file} ></EmailList>\r\n            ) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmailLists;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport './twolist.css'\r\nimport Champaigns from './campaignHolder/campaignHolder'\r\nimport EmailLists from './emailListHolder/emailListHolder'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport store from '../../../store/store'\r\nimport { storeUserRequest, getAllEmailList } from '../../../actions'\r\n\r\nconst TwoLists = () => {\r\n    const [butText, setButText] = useState(store.getState().userData.username)\r\n    const { push } = useHistory(null)\r\n    const logOffButtonRef = useRef(null)\r\n    const [logoffButtonStyle, setLogOffButtonStyle] = useSpring(() => ({\r\n        flexBasis: \"12%\",\r\n        backgroundColor: \"#3a4782ff\",\r\n        svgMargin: \"4%\",\r\n    }))\r\n    const mouseLeaveLogOff = () => {\r\n        setLogOffButtonStyle({\r\n            flexBasis: \"12%\",\r\n            backgroundColor: \"#3a4782ff\",\r\n            svgMargin: \"4%\",\r\n\r\n        })\r\n        setButText(store.getState().userData.username)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        logOffButtonRef.current.addEventListener('mouseleave', mouseLeaveLogOff)\r\n        console.log(localStorage.getItem(\"id\"))\r\n        if (!store.getState().campaigns.length) {\r\n            console.log(\"getting in\")\r\n            const allUserData = {\r\n                id: localStorage.getItem(\"id\"),\r\n                username: localStorage.getItem(\"username\"),\r\n                // password: userData.password,\r\n                email: localStorage.getItem(\"email\"),\r\n                token: localStorage.getItem(\"token\"),\r\n\r\n            }\r\n            store.dispatch(storeUserRequest(allUserData))\r\n            store.dispatch(getAllEmailList(localStorage.getItem(\"id\")))\r\n            setButText(store.getState().userData.username)\r\n        }\r\n    }, [store.getState().userData.campaigns])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"topNavLander  subWrapper\">\r\n                <animated.div className=\"logOff\"\r\n                    ref={logOffButtonRef}\r\n                    style={logoffButtonStyle}\r\n                    onMouseEnter={() => {\r\n                        setLogOffButtonStyle({\r\n                            flexBasis: \"12%\",\r\n                            backgroundColor: \"#606060ff\",\r\n                            svgMargin: \"4%\",\r\n\r\n                        })\r\n                        setButText(\"Logoff\")\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                        setLogOffButtonStyle({\r\n                            flexBasis: \"12%\",\r\n                            backgroundColor: \"#3a4782ff\",\r\n                            svgMargin: \"4%\",\r\n\r\n                        })\r\n                        setButText(store.getState().userData.username)\r\n                    }}\r\n                    onClick={e => {\r\n                        push('/')\r\n                        localStorage.clear()\r\n                    }}\r\n                >\r\n                    <animated.svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"25\"\r\n                        height=\"25\"\r\n                        style={{ marginLeft: logoffButtonStyle.svgMargin }}\r\n                        version=\"1.1\"\r\n                        viewBox=\"0 0 83.41 83.41\"\r\n                    >\r\n                        <g fillOpacity=\"1\" transform=\"translate(3.692 -95.684)\">\r\n                            <ellipse\r\n                                cx=\"38.201\"\r\n                                cy=\"139.82\"\r\n                                fill=\"#496885\"\r\n                                strokeWidth=\"0.285\"\r\n                                opacity=\"1\"\r\n                                rx=\"33.102\"\r\n                                ry=\"33.102\"\r\n                            ></ellipse>\r\n                            <path\r\n                                fill=\"#fff\"\r\n                                stroke=\"none\"\r\n                                strokeWidth=\"0.303\"\r\n                                d=\"M38.2 95.684a41.705 41.705 0 00-41.705 41.705A41.705 41.705 0 0038.2 179.094a41.705 41.705 0 0041.706-41.705A41.705 41.705 0 0038.2 95.684zm0 13.988a12.717 12.717 0 0112.718 12.717A12.717 12.717 0 0138.2 135.106a12.717 12.717 0 01-12.717-12.717A12.717 12.717 0 0138.2 109.672zm-.025 28.6a27.118 27.118 0 01.025 0 27.118 27.118 0 0125.627 18.248A31.98 31.98 0 0138.2 169.37a31.98 31.98 0 01-25.626-12.85 27.118 27.118 0 0125.601-18.248z\"\r\n                                opacity=\"1\"\r\n                            ></path>\r\n                        </g>\r\n                    </animated.svg>\r\n                    <p>{butText}</p>\r\n                </animated.div>\r\n\r\n            </div>\r\n            <div className=\"dashBodyMain  subWrapper\">\r\n                <div className=\"leftDash  subDash\">\r\n                    <div className=\"contentholder\">\r\n                        <div className=\"contentButtons\">\r\n                            Champaigns\r\n                        </div>\r\n                        <div className=\"contentActual\">\r\n                            <Champaigns></Champaigns>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"rightDash subDash\">\r\n                    <div className=\"contentholder\">\r\n                        <div className=\"contentButtons\">\r\n                            Email Lists\r\n                        </div>\r\n                        <div className=\"contentActual\">\r\n                            <EmailLists></EmailLists>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"createCamp   midButtons subWrapper\"\r\n                    onClick={() => push(\"/dashboard/newcamp\")}\r\n                >\r\n                    Create Champaign\r\n                </div>\r\n                <div className=\"addEmailList midButtons subWrapper\">\r\n                    Add Emaillist\r\n                </div> */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TwoLists;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport store from '../../../store/store'\r\nimport { storeCampaign } from '../../../actions'\r\nimport axios from 'axios'\r\n\r\nconst CampForm = ({ newCampaignData, setNewCampaignData }) => {\r\n    const [emailCSV, setEmailCSV] = useState([])\r\n\r\n    useEffect(() => {\r\n        setEmailCSV(store.getState().emailList)\r\n    })\r\n\r\n\r\n    const options = emailCSV ? emailCSV.map(list =>\r\n        <option key={list.id} value={list.id}>{list.name}</option>\r\n    ) : null;\r\n\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <>\r\n            <div className=\"topNavCam  subWrapperCam\">\r\n                {/* <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                    onClick={() => push(\"/dashboard\")}\r\n                >\r\n                    Back\r\n                </div> */}\r\n                {/* <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n                    <p>Save & Next</p>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolder\">\r\n                    <form className=\"formFields  Fields\">\r\n                        <div className=\"leftFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"camName\">Campaign Name</label>\r\n                                <input value={newCampaignData.campName} type=\"text\" id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, campName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderName\">Sender Name</label>\r\n                                <input value={newCampaignData.senderName} type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, senderName: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailSub\">Email Subject</label>\r\n                                <input value={newCampaignData.emailSub} type=\"text\" id=\"emailSub\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailSub: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rightFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n                                <input value={newCampaignData.senderEmail} type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, senderEmail: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailList\">Email Attachment</label>\r\n                                <input type=\"file\" id=\"emailList\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailAttachment: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailLists\">Email List</label>\r\n                                <select id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, emailListCVS: e.target.value })}\r\n                                >\r\n                                    {options}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtons Fields\">\r\n                        <div className=\"sendButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                push(\"/dashboard\")\r\n                            }}\r\n                        >\r\n                            Back{/* {update ? \"Update & Send\" : \"Save & Send\"} */}\r\n                        </div>\r\n                        <div className=\"createButton Fields formButtonsCam\"\r\n                            onClick={() => {\r\n                                push(\"/dashboard/newcamp/maileditor\")\r\n                            }\r\n                            }\r\n                        >\r\n                            Next {/* {update ? \"Update & Exit\" : \"Save & Exit\"} */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CampForm;","import React, { useState, useRef } from 'react';\r\nimport './newcam.css'\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport EmailEditor from 'react-email-editor'\r\nimport axios from 'axios'\r\nimport store from '../../../store/store'\r\nimport CampForm from './campaignForm'\r\nimport { addCampaign } from '../../../actions'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nconst NewCam = () => {\r\n    const [sendButtonStyle, setSendButtonStyle] = useSpring(() => ({ transform: \"scaleX(1)\", text: \"Save & Send\", backgroundColor: \"rgb(23, 38, 74)\" }))\r\n    const [saveNexitButtonStyle, setSaveNexitButtonStyle] = useSpring(() => ({ transform: \"scaleX(1)\", text: \"Save & Exit\", backgroundColor: \"rgb(23, 38, 74)\" }))\r\n    const [newCampaignData, setNewCampaignData] = useState({\r\n        senderName: \"\",//string\r\n        senderEmail: \"\",//string\r\n        campName: \"\",//string\r\n        emailSub: \"\",//string\r\n        emailListCVS: 0,//number\r\n        emailAttachment: null,//null\r\n        emailBodyJSON: null,//JSONobject\r\n        emailBodyHTML: null,//HTMLobject \r\n    })\r\n    const { push } = useHistory(null)\r\n    const emailEditorRef = useRef(null);\r\n\r\n    return (\r\n        <Switch>\r\n\r\n            <Route path=\"/dashboard/newcamp/maileditor\" render={() =>\r\n                <>\r\n                    <div className=\"topNavCam  subWrapperCam\">\r\n                        <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                            onClick={() => push(\"/dashboard/newcamp\")}\r\n                        >\r\n                            Back\r\n                        </div>\r\n                        <animated.div className=\"topButtonsCam subWrapperCam saveAndsend\"\r\n                            style={sendButtonStyle}\r\n                            onClick={() => {\r\n                                setSendButtonStyle({ transform: \"scaleX(1)\", text: \"Sending...\", backgroundColor: \"#ff9f1bff\" });\r\n                                emailEditorRef.current.editor.exportHtml(({ design, html }) => {\r\n                                    setNewCampaignData({ ...newCampaignData, emailBodyJSON: design, emailBodyHTML: html })\r\n                                    setTimeout(() => {\r\n                                        let dataForm = new FormData\r\n                                        let Jda = JSON.stringify(newCampaignData.emailBodyJSON)\r\n                                        dataForm.append(\"name\", newCampaignData.campName)\r\n                                        dataForm.append(\"sender_name\", newCampaignData.senderName)\r\n                                        dataForm.append(\"sender_email\", newCampaignData.senderEmail)\r\n                                        dataForm.append(\"email_subject\", newCampaignData.emailSub)\r\n                                        dataForm.append(\"my_customer\", store.getState().userData.id)\r\n                                        dataForm.append(\"camp_emails\", Number(newCampaignData.emailListCVS))\r\n                                        dataForm.append(\"email_message\", \"will see\")\r\n                                        dataForm.append(\"temp_json\", Jda)\r\n                                        dataForm.append(\"ht\", html)\r\n                                        dataForm.append(\"attachment\", newCampaignData.emailAttachment)//newCampaignData.emailAttachment)\r\n                                        axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\",\r\n                                            dataForm\r\n                                        ).then(res => {\r\n                                            console.log(res.data, res.data.id)\r\n                                            store.dispatch(addCampaign())\r\n                                            setSendButtonStyle({ transform: \"scaleX(1)\", text: \"Done!\", backgroundColor: \"#365194ff\" });\r\n                                            setTimeout(() => { push('/dashboard') }, 200)\r\n                                            axios.post(`https://emailengine2020.herokuapp.com/campid/${res.data.id}/`)\r\n                                        })\r\n                                            .catch(er => {\r\n                                                if (er.response) {\r\n                                                    if (er.response.status === 500) {\r\n                                                        setSendButtonStyle({ transform: \"scaleX(1)\", text: \"Wait Trying Again\", backgroundColor: \"#a42020ff\" });\r\n                                                        document.getElementsByClassName(\"saveAndsend\")[0].click()\r\n                                                        // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            )\r\n\r\n                                    }, 0)\r\n\r\n                                })\r\n                            }}\r\n\r\n\r\n                        >\r\n                            {sendButtonStyle.text}\r\n                        </animated.div>\r\n                        <animated.div className=\"topButtonsCam subWrapperCam saveAndExit\"\r\n                            style={saveNexitButtonStyle}\r\n                            onClick={() => {\r\n                                setSaveNexitButtonStyle({ transform: \"scaleX(1)\", text: \"Sending...\", backgroundColor: \"#ff9f1bff\" });\r\n                                emailEditorRef.current.editor.exportHtml(({ design, html }) => {\r\n                                    setNewCampaignData({ ...newCampaignData, emailBodyJSON: design, emailBodyHTML: html })\r\n                                    setTimeout(() => {\r\n                                        let dataForm = new FormData\r\n                                        let Jda = JSON.stringify(newCampaignData.emailBodyJSON)\r\n                                        dataForm.append(\"name\", newCampaignData.campName)\r\n                                        dataForm.append(\"sender_name\", newCampaignData.senderName)\r\n                                        dataForm.append(\"sender_email\", newCampaignData.senderEmail)\r\n                                        dataForm.append(\"email_subject\", newCampaignData.emailSub)\r\n                                        dataForm.append(\"my_customer\", store.getState().userData.id)\r\n                                        dataForm.append(\"camp_emails\", Number(newCampaignData.emailListCVS))\r\n                                        dataForm.append(\"email_message\", \"will see\")\r\n                                        dataForm.append(\"temp_json\", Jda)\r\n                                        dataForm.append(\"ht\", html)\r\n                                        dataForm.append(\"attachment\", newCampaignData.emailAttachment)//newCampaignData.emailAttachment)\r\n                                        axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\",\r\n                                            dataForm\r\n                                        ).then(res => {\r\n                                            console.log(res.data)\r\n                                            store.dispatch(addCampaign())\r\n                                            setSendButtonStyle({ transform: \"scaleX(1)\", text: \"Done!\", backgroundColor: \"#365194ff\" });\r\n                                            setTimeout(() => { push('/dashboard') }, 200)\r\n                                        })\r\n                                            .catch(er => {\r\n                                                if (er.response) {\r\n                                                    if (er.response.status === 500) {\r\n                                                        alert(er.response.status)\r\n                                                        //document.getElementsByClassName(\"sendAndExit\")[0].click()\r\n                                                        // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                            )\r\n\r\n                                    }, 0)\r\n\r\n                                })\r\n                            }\r\n                            }\r\n\r\n                        >\r\n                            {saveNexitButtonStyle.text}\r\n                        </animated.div>\r\n\r\n                    </div>\r\n                    <div className=\"dashBodyMain  subWrapper\">\r\n                        <EmailEditor ref={emailEditorRef}></EmailEditor>\r\n                    </div>\r\n                </>\r\n            }>\r\n            </Route>\r\n            <Route path=\"/dashboard/newcamp\" render={() =>\r\n                <CampForm newCampaignData={newCampaignData}\r\n                    setNewCampaignData={setNewCampaignData}\r\n                ></CampForm>}>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default NewCam;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport store from '../../../store/store'\r\nimport { storeCampaign, updateCampaign } from '../../../actions'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport axios from 'axios'\r\n\r\nconst LoadedCampForm = ({ newCampaignData, setNewCampaignData, loadTheTemplate, loaded, setLoaded }) => {\r\n    const [emailCSV, setEmailCSV] = useState([])\r\n\r\n    const [upNexitButtonStyle, setUpNexitButtonStyle] = useSpring(() => ({ text: \"Update & Exit\", backgroundColor: \"#365194ff\" }))\r\n    const [upNsendButtonStyle, setUpNsendButtonStyle] = useSpring(() => ({ text: \"Update & Send\", backgroundColor: \"#365194ff\" }))\r\n\r\n    useEffect(() => {\r\n        const loadedCamp = store.getState().loadedCampaign ? store.getState().loadedCampaign.campId : null\r\n        if (loadedCamp) {\r\n            if (!loaded) {\r\n                console.log(\"getting into if\")\r\n                const first = store.getState().campaigns.filter(camp => camp.id === loadedCamp)\r\n                setNewCampaignData(first[0])\r\n                setLoaded(true)\r\n            }\r\n        }\r\n        setEmailCSV(store.getState().emailList)\r\n    }, [])\r\n\r\n    const options = emailCSV ? emailCSV.map(list =>\r\n        <option key={list.id} value={list.id}>{list.name}</option>\r\n    ) : null;\r\n\r\n\r\n    const camNameRef = useRef(null)\r\n    const SenderNameRef = useRef(null)\r\n    const emailSubRef = useRef(null)\r\n    const SenderEmailRef = useRef(null)\r\n\r\n    console.log(newCampaignData.campName)\r\n\r\n\r\n    const { push } = useHistory(null)\r\n    return (\r\n        <>\r\n            <div className=\"topNavCam  subWrapperCam\">\r\n                <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                    onClick={() => push(\"/dashboard\")}\r\n                >\r\n                    Back\r\n                </div>\r\n                {/* <div className=\"addEmailList topButtonsCam subWrapperCam\">\r\n                    <p>Save & Next</p>\r\n                </div> */}\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolder\">\r\n                    <form className=\"formFields  Fields\">\r\n                        <div className=\"leftFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"camName\">Campaign Name</label>\r\n                                <input defaultValue={newCampaignData.name} ref={camNameRef} type=\"text\" id=\"camName\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderName\">Sender Name</label>\r\n                                <input defaultValue={newCampaignData.sender_name} ref={SenderNameRef} type=\"text\" id=\"SenderName\" name=\"SenderName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, sender_name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailSub\">Email Subject</label>\r\n                                <input defaultValue={newCampaignData.email_subject} ref={emailSubRef} type=\"text\" id=\"emailSub\" name=\"camName\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, email_subject: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rightFields Fields\">\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"SenderEmail\">Sender Email</label>\r\n                                <input defaultValue={newCampaignData.sender_email} ref={SenderEmailRef} type=\"text\" id=\"SenderEmail\" name=\"SenderEmail\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, sender_email: e.target.value })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailList\">Email Attachment</label>\r\n\r\n                                <input type=\"file\" id=\"emailList\"\r\n                                    onChange={e => setNewCampaignData({ ...newCampaignData, attachment: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                            <div className=\"subField Fields\">\r\n                                <label htmlFor=\"emailLists\">Email List</label>\r\n                                {console.log(newCampaignData.camp_emails)}\r\n                                <select id=\"emailLists\" name=\"emailLists\" value={newCampaignData.camp_emails}\r\n                                    onChange={e => {\r\n                                        console.log(\"hey hey\", newCampaignData.camp_emails)\r\n                                        setNewCampaignData({ ...newCampaignData, camp_emails: e.target.value })\r\n                                    }\r\n                                    }\r\n                                >\r\n                                    {options}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"subFieldLong Fields\">\r\n                                <label htmlFor=\"emailBody\">Email Body</label>\r\n                                <div id=\"emailBody\" className=\"desBody Fields formButtonsCam\"\r\n                                    onClick={() => {\r\n\r\n                                        push(\"/dashboard/loadedcamp/maileditor\")\r\n                                        setTimeout(() => {\r\n                                            loadTheTemplate(newCampaignData.temp_json)\r\n                                        }, 500)\r\n                                    }}\r\n                                >\r\n                                    Deisgn Body\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtons Fields\">\r\n                        <animated.div className=\"sendButton Fields formButtonsCam\"\r\n                            style={upNsendButtonStyle}\r\n                            onClick={() => {\r\n                                //Updating\r\n                                setUpNsendButtonStyle({ transform: \"scaleX(1)\", text: \"Updating...\", backgroundColor: \"#389685ff\" })\r\n                                setTimeout(() => {\r\n                                    //console.log(newCampaignData.ht)\r\n                                    let dataForm = new FormData\r\n                                    let Jda = JSON.stringify(newCampaignData.temp_json)\r\n                                    dataForm.append(\"name\", newCampaignData.name)\r\n                                    dataForm.append(\"sender_name\", newCampaignData.sender_name)\r\n                                    dataForm.append(\"sender_email\", newCampaignData.sender_email)\r\n                                    dataForm.append(\"email_subject\", newCampaignData.email_subject)\r\n                                    dataForm.append(\"my_customer\", store.getState().userData.id)\r\n                                    dataForm.append(\"camp_emails\", newCampaignData.camp_emails)\r\n                                    dataForm.append(\"email_message\", \"will see\")\r\n                                    dataForm.append(\"temp_json\", Jda)\r\n                                    dataForm.append(\"ht\", newCampaignData.ht)\r\n                                    if (typeof (!newCampaignData.attachment) === 'string') {\r\n                                        dataForm.append(\"attachment\", newCampaignData.attachment)\r\n                                    }\r\n                                    axios.put(`https://emailengine2020.herokuapp.com/camprud/${store.getState().loadedCampaign.campId}/`,\r\n                                        dataForm\r\n                                    ).then(res => {\r\n                                        console.log(res)\r\n                                        console.log(\"reached res\")\r\n\r\n                                        store.dispatch(updateCampaign(store.getState().userData.id))\r\n\r\n                                        setUpNsendButtonStyle({ text: \"Sending...\", backgroundColor: \"#389685ff\" })\r\n                                        axios.post(`https://emailengine2020.herokuapp.com/campid/${store.getState().loadedCampaign.campId}/`).then(res => {\r\n                                            setTimeout(() => { setUpNsendButtonStyle({ text: \"Sent!\", backgroundColor: \"#656565ff\" }) }, 1000)\r\n                                            setTimeout(() => { push('/dashboard') }, 1300)\r\n                                        })\r\n                                    })\r\n                                        .catch(er => {\r\n                                            console.log(er)\r\n                                            console.log(\"reached er\")\r\n                                            if (er.response) {\r\n                                                console.log(er.response.data)\r\n                                                // if (er.response.status === 500) {\r\n                                                //     document.getElementsByClassName(\"addEmailList topButtonsCam subWrapperCam\")[0].click()\r\n                                                //     // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\r\n                                                // }\r\n                                            }\r\n                                        }\r\n                                        )\r\n\r\n                                }, 0)\r\n                                //only send\r\n                                // setUpNsendButtonStyle({ text: \"Sending...\", backgroundColor: \"#389685ff\" })\r\n                                // axios.post(`https://emailengine2020.herokuapp.com/campid/${newCampaignData.id}/`).then(res => {\r\n                                //     setTimeout(() => { setUpNsendButtonStyle({ text: \"Sent!\", backgroundColor: \"#656565ff\" }) }, 1000)\r\n                                //     setTimeout(() => { push('/dashboard') }, 1300)\r\n                                // })\r\n                            }}\r\n                        >\r\n                            {upNsendButtonStyle.text}{/* {update ? \"Update & Send\" : \"Save & Send\"} */}\r\n                        </animated.div>\r\n                        <animated.div className=\"createButton Fields formButtonsCam\"\r\n                            style={upNexitButtonStyle}\r\n                            onClick={() => {\r\n                                setUpNexitButtonStyle({ transform: \"scaleX(1)\", text: \"Updating...\", backgroundColor: \"#389685ff\" })\r\n                                setTimeout(() => {\r\n                                    //console.log(newCampaignData.ht)\r\n                                    let dataForm = new FormData\r\n                                    let Jda = JSON.stringify(newCampaignData.temp_json)\r\n                                    dataForm.append(\"name\", newCampaignData.name)\r\n                                    dataForm.append(\"sender_name\", newCampaignData.sender_name)\r\n                                    dataForm.append(\"sender_email\", newCampaignData.sender_email)\r\n                                    dataForm.append(\"email_subject\", newCampaignData.email_subject)\r\n                                    dataForm.append(\"my_customer\", store.getState().userData.id)\r\n                                    dataForm.append(\"camp_emails\", newCampaignData.camp_emails)\r\n                                    dataForm.append(\"email_message\", \"will see\")\r\n                                    dataForm.append(\"temp_json\", Jda)\r\n                                    dataForm.append(\"ht\", newCampaignData.ht)\r\n                                    if (typeof (!newCampaignData.attachment) === 'string') {\r\n                                        dataForm.append(\"attachment\", newCampaignData.attachment)\r\n                                    }\r\n                                    axios.put(`https://emailengine2020.herokuapp.com/camprud/${store.getState().loadedCampaign.campId}/`,\r\n                                        dataForm\r\n                                    ).then(res => {\r\n                                        console.log(res)\r\n                                        console.log(\"reached res\")\r\n\r\n                                        store.dispatch(updateCampaign(store.getState().userData.id))\r\n\r\n                                        setTimeout(() => {\r\n                                            setUpNexitButtonStyle({ text: \"Done!\", backgroundColor: \"#365194ff\" })\r\n\r\n                                        }, 1000)\r\n                                        setTimeout(() => { push('/dashboard') }, 1300)\r\n                                    })\r\n                                        .catch(er => {\r\n                                            console.log(er)\r\n                                            console.log(\"reached er\")\r\n                                            if (er.response) {\r\n                                                //console.log(er.response.data)\r\n                                                // if (er.response.status === 500) {\r\n                                                //     document.getElementsByClassName(\"addEmailList topButtonsCam subWrapperCam\")[0].click()\r\n                                                //     // axios.post(\"https://emailengine2020.herokuapp.com/newcampaign/\", dataForm).then(res => res.data)\r\n                                                // }\r\n                                            }\r\n                                        }\r\n                                        )\r\n\r\n                                }, 0)\r\n                            }}\r\n                        >\r\n                            {upNexitButtonStyle.text}\r\n                        </animated.div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoadedCampForm;","import React, { useState, useRef, useEffect } from 'react';\r\nimport './newcam.css'\r\nimport { useFormik } from 'formik'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport EmailEditor from 'react-email-editor'\r\n\r\n\r\nimport LoadedCampForm from './loadedCampForm'\r\n\r\nconst LoadedCamp = () => {\r\n\r\n    const initialState = {\r\n        senderName: \"\",//string\r\n        senderEmail: \"\",//string\r\n        campName: \"\",//string\r\n        emailSub: \"\",//string\r\n        emailListCVS: null,//file\r\n        emailBodyJSON: null,//JSONobject\r\n        emailBodyHTML: null,//HTMLobject \r\n    }\r\n    const [newCampaignData, setNewCampaignData] = useState(initialState)\r\n\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    const { push } = useHistory(null)\r\n\r\n    const emailEditorRef = useRef(null);\r\n\r\n\r\n\r\n    const loadTheTemplate = (data) => {\r\n        emailEditorRef.current.editor.loadDesign(data)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     console.log(emailEditorRef.current.editor)\r\n    // })\r\n\r\n\r\n    return (\r\n        <Switch>\r\n\r\n            <Route path=\"/dashboard/loadedcamp/maileditor\" render={() =>\r\n                <>\r\n                    <div className=\"topNavCam  subWrapperCam\">\r\n                        <div className=\"createCamp   topButtonsCam subWrapperCam\"\r\n                            onClick={() => push(\"/dashboard/loadedcamp\")}\r\n\r\n                        >\r\n                            Back\r\n                        </div>\r\n                        <div className=\"addEmailList topButtonsCam subWrapperCam\"\r\n                            onClick={() => {\r\n                                console.log(emailEditorRef.current)\r\n                                emailEditorRef.current.editor.exportHtml(({ design, html }) => {\r\n\r\n                                    setNewCampaignData({ ...newCampaignData, temp_json: design, ht: html })\r\n\r\n                                    push(\"/dashboard/loadedcamp\")\r\n                                })\r\n                            }\r\n                            }\r\n\r\n                        >\r\n                            Update & Next\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"dashBodyMain  subWrapper\">\r\n                        <EmailEditor ref={emailEditorRef}></EmailEditor>\r\n                    </div>\r\n                </>\r\n            }>\r\n            </Route>\r\n            <Route path=\"/dashboard/loadedcamp\" render={() =>\r\n                <LoadedCampForm newCampaignData={newCampaignData}\r\n                    setNewCampaignData={setNewCampaignData}\r\n                    loadTheTemplate={loadTheTemplate}\r\n                    loaded={loaded}\r\n                    setLoaded={setLoaded}\r\n                ></LoadedCampForm>}>\r\n            </Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default LoadedCamp;","import React, { useState } from 'react';\r\nimport './emailuploader.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport store from '../../../store/store'\r\nimport { addEmailList } from '../../../actions'\r\n\r\nconst EmailListForm = () => {\r\n    const [emailListState, setEmailListState] = useState({ name: \"\", file: \"\" })\r\n    const { push } = useHistory(null)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"topNav  subWrapperCam\">\r\n\r\n            </div>\r\n            <div className=\"dashBodyMainCam  subWrapperCam\">\r\n                <div className=\"camFormHolderEmail\">\r\n                    <form className=\"formFieldsEmail  FieldsEmail\">\r\n                        <div className=\"subFormEmail\">\r\n                            <div className=\"subFieldEmail\">\r\n                                <label htmlFor=\"emailName\">File Name</label>\r\n                                <input type=\"text\" id=\"emailName\" name=\"emailName\"\r\n                                    onChange={e => setEmailListState({ ...emailListState, name: e.target.value })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"subFormEmail\">\r\n                            <div className=\"subFieldEmail\">\r\n                                <label htmlFor=\"emailFile\">Upload File</label>\r\n                                <input type=\"file\" id=\"emailFile\" name=\"emailFile\"\r\n                                    onChange={e => setEmailListState({ ...emailListState, file: e.target.files[0] })}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"formButtonsEmail FieldsEmail\">\r\n                        <div className=\"sendButton lowButtonEmails \"\r\n                            onClick={() => { push(\"/dashboard\") }}\r\n                        >Back</div>\r\n                        <div className=\"createButton lowButtonEmails \"\r\n                            onClick={() => {\r\n                                console.log(emailListState.file, emailListState.name, store.getState().userData.id)\r\n                                var formData = new FormData();\r\n                                formData.append(\"upload_file\", emailListState.file)\r\n                                formData.append(\"name\", emailListState.name)\r\n                                formData.append(\"my_customer\", store.getState().userData.id)\r\n                                store.dispatch(addEmailList(formData))\r\n                                push('/dashboard')\r\n                            }}\r\n                        >Save</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmailListForm;","import React, { useState, useRef } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport './dashboard.css'\r\nimport TwoLists from './Email_Campaign_Lists/twoLists'\r\nimport NewCam from './CreateCampaigns/newCam'//'../newCampaign/newCam'\r\nimport LoadedCamp from './LoadedCampaigns/loadedCampaign'\r\nimport EmailListForm from './CreateEmailList/emailListForm'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nconst DashBoard = () => {\r\n\r\n    const { push } = useHistory(null)\r\n\r\n    const emailEditorRef = useRef(null);\r\n\r\n    const [emailButtonStyle, setEmailButtonStyle] = useSpring(() => ({ transform: \"translateY(0%)\", backgroundColor: \"#3a4782ff\" }))\r\n    const [campButtonStyle, setCampButtonStyle] = useSpring(() => ({ transform: \"translateY(0%)\", backgroundColor: \"#3a4782ff\" }))\r\n\r\n    return (\r\n        <div className=\"dashWrapper\">\r\n            <div className=\"sideNavHolder subWrapper\">\r\n                <div className=\"cessiniHolder  subWrapper\">\r\n                    <svg className=\"cessiniSVG\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        version=\"1.1\"\r\n                        viewBox=\"0 0 23.841 8.546\"\r\n                    >\r\n                        <g stroke=\"none\" transform=\"translate(9.772 -94)\">\r\n                            <path\r\n                                fill=\"#c1c1c1\"\r\n                                fillOpacity=\"0.812\"\r\n                                strokeLinecap=\"butt\"\r\n                                strokeLinejoin=\"miter\"\r\n                                strokeOpacity=\"1\"\r\n                                strokeWidth=\"1.15\"\r\n                                d=\"M39.72 0c-5.275 0-10.506.078-14.345.229H0v8.18c.006.064.01.128.01.195v7.927c1.578 2.74 16.517 14.252 19.785 15.098 3.452.894 36.404.894 39.855 0 2.125-.55 9.17-5.605 14.284-9.832 2.938-2.134 5.855-4.39 8.586-7.652 3.133-3.744 6.079-8.9 7.105-11.415C90.651.216 89.784.297 89.35.338l-.434.04-9.338.874V.229h-25.51C50.23.079 44.998 0 39.723 0z\"\r\n                                transform=\"matrix(.26458 0 0 .26458 -9.772 94)\"\r\n                            ></path>\r\n                            <path\r\n                                fill=\"#3f4e8eff\"\r\n                                fillOpacity=\"1\"\r\n                                strokeWidth=\"0.473\"\r\n                                d=\"M39.72.02c-5.275 0-10.506.072-14.345.209H0v7.443c.006.059.01.12.01.18v7.214c1.578 2.493 16.517 12.97 19.785 13.74 3.452.814 36.404.814 39.855 0 3.276-.771 18.273-11.296 19.793-13.757a34.531 34.531 0 001.598-1.477c3.468-3.435 6.883-8.295 8.139-10.703 1.256-2.407.385-2.408-.051-2.408h-9.55V.229h-25.51c-3.84-.137-9.07-.21-14.346-.21z\"\r\n                                transform=\"matrix(.26458 0 0 .26458 -9.772 94)\"\r\n                            ></path>\r\n                            <g\r\n                                fill=\"#fff\"\r\n                                fillOpacity=\"1\"\r\n                                transform=\"matrix(.05103 0 0 .05103 -5.304 98.105)\"\r\n                            >\r\n                                <path\r\n                                    strokeLinecap=\"butt\"\r\n                                    strokeLinejoin=\"miter\"\r\n                                    strokeOpacity=\"1\"\r\n                                    strokeWidth=\"1\"\r\n                                    d=\"M44.398 23.85c1.234.04 4.474-4.127 4.474-4.127l-13.193-.463c-1.466.232-2.931.463-4.282 1.428-1.35.964-2.585 2.662-3.086 4.552-.501 1.891-.27 3.974.364 5.46.634 1.485 1.759 2.449 3.147 3.22 1.39.771 3.087 1.389 5.248 1.718 2.162.33 5.064.376 7.828.42l3.442-4.299-10.873-.596c-1.136-.418-2.271-.837-2.997-1.596-.725-.759-1.028-1.819-.778-2.764.251-.946 1.138-1.833 2.025-2.342.886-.508 1.66-.649 3.319-.687 1.659-.039 4.128.038 5.362.077z\"\r\n                                ></path>\r\n                                <path\r\n                                    strokeLinecap=\"butt\"\r\n                                    strokeLinejoin=\"miter\"\r\n                                    strokeOpacity=\"1\"\r\n                                    strokeWidth=\"1\"\r\n                                    d=\"M64.615 35.033c.708-.687 1.816-2.105 2.26-2.903.444-.797.222-.974-1.839-.997-2.06-.022-5.96.11-8.021.133-2.06.022-2.282-.066-2.327-.376-.045-.31.088-.842.154-1.152.067-.31.067-.4 1.463-.4 1.397-.001 4.277.089 5.777.078 1.5-.01 1.602-.078 2.156-.831a60.04 60.04 0 001.981-2.898c.453-.727.346-.78.17-.825-.178-.044-.444-.089-2.35-.044-1.906.044-5.45.177-7.246.222-1.795.044-1.839 0-1.861-.31-.023-.31-.023-.886.04-1.206.061-.32.115-.346 1.667-.324 1.552.022 4.564.11 6.092.111 1.529 0 1.573-.088 2.06-.687.488-.598 1.419-1.706 1.862-2.326.443-.62.4-.753-2.393-.798-2.791-.045-8.42 0-11.234 0s-2.858-.044-2.925-.022c-.067.022-.156.11-.2 2.792a419.496 419.496 0 000 10.592c.045 2.636.045 2.636.245 2.703.2.066.554.2 2.77.221 2.215.022 6.293-.066 8.486-.089 2.194-.022 2.504.023 3.213-.664z\"\r\n                                ></path>\r\n                                <path\r\n                                    strokeLinecap=\"butt\"\r\n                                    strokeLinejoin=\"miter\"\r\n                                    strokeOpacity=\"1\"\r\n                                    strokeWidth=\"1\"\r\n                                    d=\"M68.648 34.745c.354-.754 1.417-2.26 1.994-2.991.577-.731.665-.687 2.77-.665 2.105.022 6.227.022 8.354.022 2.127 0 2.26 0 2.432-.19.171-.19.403-.608.47-.94.067-.332-.022-.598-.775-.798-.753-.2-2.171-.332-4.188-.399-2.016-.067-4.63-.067-6.116-.067-1.484 0-1.839 0-2.285-.103a5.357 5.357 0 01-1.636-.716c-.577-.376-1.153-.908-1.486-1.75-.332-.842-.421-1.994-.2-2.925.222-.931.754-1.64 1.286-2.172.532-.532 1.063-.887 1.418-1.153.354-.266.532-.443 3.501-.51 2.97-.066 8.731-.021 11.611.09 2.88.111 2.88.2 2.46.864-.422.665-1.264 1.861-1.64 2.46-.376.597-.376.597-2.304.575l-7.888-.088c-2.061-.023-2.283-.023-2.483.11-.2.134-.377.4-.465.644-.089.244-.089.465.155.62.245.155.732.243 2.726.288 1.995.044 5.496.044 7.512.133 2.017.088 2.548.266 3.102.62.554.355 1.13.887 1.573 1.53a5.43 5.43 0 01.886 2.216c.133.82.088 1.706-.111 2.348-.2.642-.554 1.041-1.02 1.462-.464.42-1.04.864-1.727 1.285-.687.421-1.485.82-2.15 1.02-.664.199-1.196.199-2.769.199-1.573 0-4.188 0-6.47-.044-2.282-.045-4.232-.133-5.385-.178-1.152-.044-1.506-.044-1.152-.797z\"\r\n                                ></path>\r\n                                <path\r\n                                    strokeLinecap=\"butt\"\r\n                                    strokeLinejoin=\"miter\"\r\n                                    strokeOpacity=\"1\"\r\n                                    strokeWidth=\"1\"\r\n                                    d=\"M91.116 35.01c.354-.753 1.418-2.26 1.995-2.99.576-.732.665-.687 2.77-.665 2.105.021 6.227.021 8.354.021 2.127 0 2.26 0 2.431-.19.172-.19.404-.607.47-.939.067-.332-.021-.598-.774-.798-.753-.2-2.171-.333-4.188-.4-2.016-.066-4.631-.066-6.116-.066-1.484 0-1.839 0-2.285-.103a5.357 5.357 0 01-1.637-.716c-.576-.376-1.152-.908-1.485-1.75-.333-.842-.421-1.994-.2-2.925.222-.931.753-1.64 1.285-2.172.532-.532 1.064-.887 1.419-1.153.354-.266.531-.443 3.501-.51 2.97-.066 8.731-.022 11.611.09 2.88.111 2.88.2 2.46.864-.422.664-1.264 1.86-1.64 2.46-.376.597-.376.597-2.304.575l-7.888-.088c-2.061-.023-2.283-.023-2.483.11-.2.133-.377.4-.466.644-.088.244-.088.465.156.62.244.155.732.243 2.726.288 1.994.044 5.495.044 7.512.133 2.016.088 2.548.266 3.102.62.554.355 1.13.887 1.573 1.53a5.43 5.43 0 01.886 2.216c.133.82.088 1.706-.111 2.348-.2.642-.554 1.04-1.02 1.462-.465.42-1.04.864-1.728 1.285-.686.42-1.484.82-2.149 1.02-.664.199-1.196.199-2.77.199-1.572 0-4.187 0-6.47-.045-2.282-.044-4.232-.132-5.384-.177-1.152-.044-1.507-.044-1.153-.797z\"\r\n                                ></path>\r\n                                <path d=\"M114.87 19.145h3.457c.589 0 1.063.474 1.063 1.064V34.7c0 .59-.474 1.064-1.063 1.064h-3.457c-.59 0-1.064-.474-1.064-1.064V20.21c0-.59.475-1.064 1.064-1.064z\"></path>\r\n                                <path d=\"M143.986 19.41h3.457c.59 0 1.063.475 1.063 1.064v14.492c0 .59-.474 1.064-1.063 1.064h-3.457c-.59 0-1.063-.475-1.063-1.064V20.474c0-.589.474-1.063 1.063-1.063z\"></path>\r\n                                <path\r\n                                    strokeLinecap=\"butt\"\r\n                                    strokeLinejoin=\"miter\"\r\n                                    strokeOpacity=\"1\"\r\n                                    strokeWidth=\"1\"\r\n                                    d=\"M135.477 19.229c0 2.969 0 5.937-.067 7.466-.066 1.53-.199 1.619-.332 1.707-1.462-1.462-2.926-2.925-3.635-3.656l-.22-.225v-.058c-1.684-1.507-3.366-3.013-4.496-3.856-1.13-.842-1.707-1.019-2.438-1.086-.731-.066-1.62-.022-2.174.245-.554.266-.774.752-.996 1.24v14.758h5.319c0-2.97 0-5.938.066-7.467.067-1.53.199-1.619.332-1.707 1.462 1.462 2.926 2.925 3.635 3.656l.22.225v.058c1.684 1.507 3.366 3.013 4.496 3.856 1.13.842 1.707 1.019 2.438 1.086.731.066 1.617.022 2.172-.244.554-.267.776-.753.998-1.24V19.228z\"\r\n                                ></path>\r\n                                <path d=\"M149.713 35.484c-.295 0-.531.11-.531.246 0 .137.236.245.53.245h.872c-.009.063-.031.11-.031.181v2.3c0 .337.11.61.246.61s.244-.273.244-.61v-2.3c0-.07-.02-.118-.03-.181h.706c.295 0 .531-.108.531-.245 0-.136-.236-.246-.531-.246z\"></path>\r\n                                <path\r\n                                    strokeWidth=\"1.071\"\r\n                                    d=\"M152.998 35.545c-.008 0-.014.01-.021.012-.008.002-.02-.003-.028.002-.005.003-.005.012-.01.015-.107.067-.187.296-.187.582v2.3c0 .337.11.61.246.61s.244-.273.244-.61V36.58l1.078 1.844c.114.195.25.335.37.402.007.01.01.025.019.031.013.008.031.002.047.004.013.005.024.003.037.004.013-.001.024.001.039-.004.015-.002.034.004.047-.004.01-.006.012-.022.02-.03.118-.068.254-.208.368-.403l1.036-1.77v1.883c0 .338.108.61.244.61s.246-.272.246-.61v-2.299a1.08 1.08 0 00-.094-.466c.006-.1-.008-.181-.06-.213-.124-.077-.374.116-.56.433l-1.259 2.156c-.014.025-.015.045-.027.069-.013-.024-.011-.044-.026-.069l-1.26-2.156c-.158-.272-.36-.442-.493-.44-.005 0-.01-.007-.016-.007z\"\r\n                                ></path>\r\n                            </g>\r\n                            <g\r\n                                style={{\r\n                                    lineHeight: \"1.25\",\r\n                                    InkscapeFontSpecification: \"'Cambria, Bold Italic'\",\r\n                                    fontVariantLigatures: \"normal\",\r\n                                    fontVariantCaps: \"normal\",\r\n                                    fontVariantNumeric: \"normal\",\r\n                                    fontVariantEastAsian: \"normal\",\r\n                                    whiteSpace: \"pre\",\r\n                                }}\r\n                                fill=\"#fff\"\r\n                                fillOpacity=\"1\"\r\n                                ariaLabel=\"Mail\"\r\n                                fontFamily=\"Cambria\"\r\n                                fontSize=\"40\"\r\n                                fontStretch=\"normal\"\r\n                                fontStyle=\"italic\"\r\n                                fontVariant=\"normal\"\r\n                                fontWeight=\"bold\"\r\n                                transform=\"matrix(.02748 0 0 .03243 -5.018 99.294)\"\r\n                            >\r\n                                <path\r\n                                    style={{\r\n                                        InkscapeFontSpecification: \"'Cambria, Bold Italic'\",\r\n                                        fontVariantLigatures: \"normal\",\r\n                                        fontVariantCaps: \"normal\",\r\n                                        fontVariantNumeric: \"normal\",\r\n                                        fontVariantEastAsian: \"normal\",\r\n                                    }}\r\n                                    d=\"M303.54-6.295l1.522 16.309 9.258-16.309h9.082l-.273 1.29q-.82.234-1.27.644-.43.41-.742 1.172-.312.742-.625 2.168l-3.555 16.113q-.117.508-.156.8-.039.294-.078.645-.02.332-.02.84 0 .82.372 1.21.39.372 1.25.49l-.274 1.288h-9.824l.274-1.289q.82-.234 1.25-.644.449-.41.761-1.153.313-.761.625-2.187l1.797-8.203q.293-1.328.84-3.535.547-2.227 1.27-4.649h-.391q-.918 1.68-1.973 3.496l-8.789 15.215h-3.164l-1.289-11.738q-.254-2.227-.39-3.887-.118-1.66-.196-3.281h-.312q-.274 1.797-.704 4.12-.43 2.306-.78 3.888l-1.895 8.574q-.118.508-.157.8-.039.294-.078.645-.02.332-.02.84 0 .82.372 1.21.39.372 1.25.49l-.274 1.288h-7.168l.274-1.289q.82-.234 1.25-.644.45-.41.762-1.153.312-.761.625-2.187l3.554-16.113q.254-1.153.254-2.286 0-.82-.39-1.191-.372-.39-1.23-.508l.273-1.289z\"\r\n                                ></path>\r\n                                <path\r\n                                    style={{\r\n                                        InkscapeFontSpecification: \"'Cambria, Bold Italic'\",\r\n                                        fontVariantLigatures: \"normal\",\r\n                                        fontVariantCaps: \"normal\",\r\n                                        fontVariantNumeric: \"normal\",\r\n                                        fontVariantEastAsian: \"normal\",\r\n                                    }}\r\n                                    d=\"M339.574 2.084l1.758-1.406 2.188.312-3.008 13.614q-.235 1.035-.352 1.66-.098.625-.098 1.054 0 .88.43 1.27t1.524.488l-.215 1.29h-7.5l1.054-4.005-.253-.078q-1.329 1.719-2.48 2.676-1.134.937-2.247 1.328-1.094.39-2.54.39-1.366 0-2.401-.644-1.036-.644-1.641-2.031-.606-1.406-.606-3.555 0-2.05.47-4.14.487-2.09 1.425-3.887.937-1.816 2.363-3.106 1.426-1.289 3.223-1.953 1.816-.683 3.945-.683 2.91 0 4.961 1.406zm-2.949 6.133q.137-.625.215-1.387.098-.781.098-1.504 0-1.289-.489-1.953-.488-.664-1.601-.664-1.817 0-3.223 1.836-1.406 1.816-2.266 4.902-.859 3.086-.859 5.528 0 1.425.41 2.129.43.703 1.309.703 1.289 0 2.617-1.25 1.348-1.27 2.168-2.97.82-1.698 1.465-4.648z\"\r\n                                ></path>\r\n                                <path\r\n                                    style={{\r\n                                        InkscapeFontSpecification: \"'Cambria, Bold Italic'\",\r\n                                        fontVariantLigatures: \"normal\",\r\n                                        fontVariantCaps: \"normal\",\r\n                                        fontVariantNumeric: \"normal\",\r\n                                        fontVariantEastAsian: \"normal\",\r\n                                    }}\r\n                                    d=\"M357.035-6.803l-1.015 4.785h-5.06l1.075-4.785zm-4.512 21.953q-.214.977-.273 1.446-.059.468-.059.781 0 .84.43 1.21.45.372 1.524.49l-.215 1.288h-8.125l3.047-13.633q.253-1.171.351-1.816.098-.664.098-1.113 0-.762-.371-1.074-.352-.333-1.504-.45l.293-1.289 5.722-.215h2.227z\"\r\n                                ></path>\r\n                                <path\r\n                                    style={{\r\n                                        InkscapeFontSpecification: \"'Cambria, Bold Italic'\",\r\n                                        fontVariantLigatures: \"normal\",\r\n                                        fontVariantCaps: \"normal\",\r\n                                        fontVariantNumeric: \"normal\",\r\n                                        fontVariantEastAsian: \"normal\",\r\n                                    }}\r\n                                    d=\"M367.23-7.604h2.208l-5.04 22.754q-.195.899-.273 1.387-.059.488-.059.84 0 .84.43 1.21.45.372 1.524.49l-.215 1.288h-8.125l4.941-22.07q.43-1.914.43-2.793 0-.43-.098-.664-.078-.254-.254-.41-.176-.157-.469-.235-.293-.097-1.152-.214l.313-1.27z\"\r\n                                ></path>\r\n                            </g>\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"contentHolder  subWrapper\">\r\n                    <animated.div className=\"MyEmailList sideButtons\"\r\n                        style={emailButtonStyle}\r\n                        onClick={() => {\r\n                            setEmailButtonStyle({ transform: \"translateY(0%)\", backgroundColor: \"#41a56eff\" })\r\n                            setCampButtonStyle({ transform: \"translateY(0%)\", backgroundColor: \"#3a4782ff\" })\r\n                            push(\"/dashboard/newemaillist\")\r\n                        }}\r\n                    >Add Email Lists</animated.div>\r\n                    <animated.div className=\"MyCampaign  sideButtons\"\r\n                        style={campButtonStyle}\r\n                        onClick={() => {\r\n                            setEmailButtonStyle({ transform: \"translateY(200%)\", backgroundColor: \"#3a4782ff\" })\r\n                            setCampButtonStyle({ transform: \"translateY(-200%)\", backgroundColor: \"#41a56eff\" })\r\n                            push(\"/dashboard/newcamp\")\r\n                        }}\r\n                    > Create Campaign</animated.div>\r\n                </div>\r\n            </div>\r\n            <div className=\"dashBody      subWrapper\">\r\n                <Switch>\r\n                    <Route path=\"/dashboard/newcamp\" render={() =>\r\n                        <NewCam></NewCam>\r\n                    }>\r\n                    </Route>\r\n                    <Route path=\"/dashboard/loadedcamp\" render={() =>\r\n                        <LoadedCamp></LoadedCamp>\r\n                    }>\r\n                    </Route>\r\n                    <Route path=\"/dashboard/newemaillist\" render={() => <EmailListForm></EmailListForm>}></Route>\r\n                    <Route path=\"/dashboard\" render={() => <TwoLists></TwoLists>}></Route>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashBoard;","\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport './App.css';\r\nimport SignMain from './SignInPage/signMain';\r\nimport DashBoard from './Dashboard/dashBoard';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"primaryWindow\">\r\n      <Switch>\r\n        <Route path=\"/dashboard\" render={() => <DashBoard></DashBoard>}></Route>\r\n        <Route path=\"/\" render={() => <SignMain></SignMain>}></Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter, MemoryRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <MemoryRouter>\r\n      <App></App>\r\n    </MemoryRouter>\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}